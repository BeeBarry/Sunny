unset shellHook
PATH=${PATH:-}
nix_saved_PATH="$PATH"
XDG_DATA_DIRS=${XDG_DATA_DIRS:-}
nix_saved_XDG_DATA_DIRS="$XDG_DATA_DIRS"
AR='ar'
export AR
AS='as'
export AS
BASH='/nix/store/izpf49b74i15pcr9708s3xdwyqs4jxwl-bash-5.2p32/bin/bash'
CC='gcc'
export CC
CONFIG_SHELL='/nix/store/izpf49b74i15pcr9708s3xdwyqs4jxwl-bash-5.2p32/bin/bash'
export CONFIG_SHELL
CXX='g++'
export CXX
DETERMINISTIC_BUILD='1'
export DETERMINISTIC_BUILD
HOSTTYPE='x86_64'
HOST_PATH='/nix/store/ynvrgsngg84fap3w1nkzkvam2s97j4lm-python3-3.11.12-env/bin:/nix/store/0kg70swgpg45ipcz3pr2siidq9fn6d77-coreutils-9.5/bin:/nix/store/fnq94lw19pnwdl9p8zhfrad4jmlgxlbr-findutils-4.10.0/bin:/nix/store/7jk4jrd99ngnm9iczcf63mfxqba0ak2y-diffutils-3.10/bin:/nix/store/gjlh1zvckhz0qv795lnzgw2zciklbzj2-gnused-4.9/bin:/nix/store/vsyc8jhsr4d9lm2r8yqq9n3j4i66inlj-gnugrep-3.11/bin:/nix/store/9hifsxkcrkvvb712ghnr3gy5g1aiym2d-gawk-5.2.2/bin:/nix/store/l2l5xr2zczq19gqpqz4j8vxxia1j41s1-gnutar-1.35/bin:/nix/store/164s7a7yscnicprzrr78bvk45d77a3yg-gzip-1.13/bin:/nix/store/f8p74dj4r4my8sw5prmm3y4ddkz7591j-bzip2-1.0.8-bin/bin:/nix/store/axrdky652lsmif6m5i8b55q91v4ly4gy-gnumake-4.4.1/bin:/nix/store/izpf49b74i15pcr9708s3xdwyqs4jxwl-bash-5.2p32/bin:/nix/store/7wg4bz2sika3wd7541rndbnwcq6k9h8v-patch-2.7.6/bin:/nix/store/02mf752h7f5fn7989awzca4ygy94k7w7-xz-5.6.2-bin/bin:/nix/store/fv56zpi80jpakbfmv16r60xvyqwzff6r-file-5.45/bin'
export HOST_PATH
IFS=' 	
'
IN_NIX_SHELL='impure'
export IN_NIX_SHELL
LD='ld'
export LD
LINENO='76'
MACHTYPE='x86_64-pc-linux-gnu'
NIX_BINTOOLS='/nix/store/b74nxf0yn2dzha02mgdxyklaqjaijzqp-binutils-wrapper-2.42'
export NIX_BINTOOLS
NIX_BINTOOLS_WRAPPER_TARGET_HOST_x86_64_unknown_linux_gnu='1'
export NIX_BINTOOLS_WRAPPER_TARGET_HOST_x86_64_unknown_linux_gnu
NIX_BUILD_CORES='12'
export NIX_BUILD_CORES
NIX_CC='/nix/store/zznja5f8v3jafffyah1rk46vpfcn38dv-gcc-wrapper-13.3.0'
export NIX_CC
NIX_CC_WRAPPER_TARGET_HOST_x86_64_unknown_linux_gnu='1'
export NIX_CC_WRAPPER_TARGET_HOST_x86_64_unknown_linux_gnu
NIX_CFLAGS_COMPILE=' -frandom-seed=8956d3iasw -isystem /nix/store/h3i0acpmr8mrjx07519xxmidv8mpax4y-python3-3.12.5/include -isystem /nix/store/ynvrgsngg84fap3w1nkzkvam2s97j4lm-python3-3.11.12-env/include -isystem /nix/store/h3i0acpmr8mrjx07519xxmidv8mpax4y-python3-3.12.5/include -isystem /nix/store/ynvrgsngg84fap3w1nkzkvam2s97j4lm-python3-3.11.12-env/include'
export NIX_CFLAGS_COMPILE
NIX_ENFORCE_NO_NATIVE='1'
export NIX_ENFORCE_NO_NATIVE
NIX_HARDENING_ENABLE='bindnow format fortify fortify3 pic relro stackprotector strictoverflow zerocallusedregs'
export NIX_HARDENING_ENABLE
NIX_LDFLAGS='-rpath /home/hedonicadapter/Documents/temp/examensarbete/outputs/out/lib  -L/nix/store/h3i0acpmr8mrjx07519xxmidv8mpax4y-python3-3.12.5/lib -L/nix/store/ynvrgsngg84fap3w1nkzkvam2s97j4lm-python3-3.11.12-env/lib -L/nix/store/h3i0acpmr8mrjx07519xxmidv8mpax4y-python3-3.12.5/lib -L/nix/store/ynvrgsngg84fap3w1nkzkvam2s97j4lm-python3-3.11.12-env/lib'
export NIX_LDFLAGS
NIX_NO_SELF_RPATH='1'
NIX_STORE='/nix/store'
export NIX_STORE
NM='nm'
export NM
OBJCOPY='objcopy'
export OBJCOPY
OBJDUMP='objdump'
export OBJDUMP
OLDPWD=''
export OLDPWD
OPTERR='1'
OSTYPE='linux-gnu'
PATH='/nix/store/pxy4dndr8z74lc7iza7m691sv62bzsv0-vscode-1.93.0/bin:/nix/store/454ipy9klkqcd2m5dgqzh92pl36jxqpv-python3.12-azure-cli-2.64.0/bin:/nix/store/anf041rpwqaz10l2gzwaw4midgsfq97s-python3.12-antlr4-python3-runtime-4.13.0/bin:/nix/store/h3i0acpmr8mrjx07519xxmidv8mpax4y-python3-3.12.5/bin:/nix/store/mdjc15jlsywd76vzf0mkaxy7qdv6lk7h-python3.12-charset-normalizer-3.3.2/bin:/nix/store/k6pyxc68js2zrmqprg1w47i2xxk2mxl2-python3.12-argcomplete-3.4.0/bin:/nix/store/raid425r86q2hmbvrv6m3z3qkkiwjgrg-python3.12-distro-1.9.0/bin:/nix/store/dl1xvp74i1rbd8m869a1vjai1c54yci1-python3.12-humanfriendly-10.0/bin:/nix/store/fc674xxr4yxpik6xz64ws68nr4332d9w-python3.12-jmespath-1.0.1/bin:/nix/store/3n1zrmj8y18gw15p1m9dg2sgfhn8h34w-python3.12-pygments-2.18.0/bin:/nix/store/cp2w8i43ikzc5z3phc95d4agpnabd5md-python3.12-tabulate-0.9.0/bin:/nix/store/021f5qi4ma011hcsrpw1bdfsiwclb7x5-python3.12-pkginfo-1.11.1/bin:/nix/store/lnpjnir33vbf5bw1ld88qixclbc6zdxf-python3.12-chardet-5.2.0/bin:/nix/store/86c9042239j9hfh7dapm8ljdnvqb3fjf-python3.12-fabric-3.2.2/bin:/nix/store/v5w53qzjxw80j1804i9pyc34s3ibbcsw-python3.12-invoke-2.2.0/bin:/nix/store/pg743fpc57d5cjj16xbmfn8g8r1yszik-python3.12-jsondiff-2.0.0/bin:/nix/store/sh22gl9ylbdpf7bcxbh5sb71ygn3iinr-python3.12-semver-3.0.2/bin:/nix/store/ngjcgrbr270qb0c9i1qxysz811bldrck-python3.12-sshtunnel-0.4.0/bin:/nix/store/1bgrpq2kpsngln26bwnz35mk9kf6l26g-python3.12-websocket-client-1.8.0/bin:/nix/store/vnz5ppyr98g1yfixhnbrk31rbq65jdgs-azure-functions-core-tools-4.0.5455/bin:/nix/store/fyjxsgaygmizg6hh7rv5k6ldkvgrx7x5-bicep-0.29.47/bin:/nix/store/dzd6g1ww6wgpslp1wf6h2xi95l3ghhd8-terraform-1.9.6/bin:/nix/store/6q8n07g9fwhwzcsi4ch8vb8p9j342zq2-bash-language-server-5.4.0/bin:/nix/store/zfcs674bivjj6daayni8m9bcp4859rjh-terraform-ls-0.34.3/bin:/nix/store/0hk8xmshd0c6cmnp8wz4wn9w01jl0gmh-terraform-lsp-0.0.12/bin:/nix/store/lvrml52cyhvz8r42vrvb051flf18srp2-basedpyright-1.17.5/bin:/nix/store/k97fic16vmpf9z6vjx5dgd6rxcvv5wwh-patchelf-0.15.0/bin:/nix/store/zznja5f8v3jafffyah1rk46vpfcn38dv-gcc-wrapper-13.3.0/bin:/nix/store/x8rg4vhgd20i8vzykm1196f9qdb8klhh-gcc-13.3.0/bin:/nix/store/k4jv8fr725amxalmplzhnlyik93wvk3z-glibc-2.39-52-bin/bin:/nix/store/0kg70swgpg45ipcz3pr2siidq9fn6d77-coreutils-9.5/bin:/nix/store/b74nxf0yn2dzha02mgdxyklaqjaijzqp-binutils-wrapper-2.42/bin:/nix/store/81xsp348yfgmaan9r5055mcdjfw7a8wc-binutils-2.42/bin:/nix/store/ynvrgsngg84fap3w1nkzkvam2s97j4lm-python3-3.11.12-env/bin:/nix/store/0kg70swgpg45ipcz3pr2siidq9fn6d77-coreutils-9.5/bin:/nix/store/fnq94lw19pnwdl9p8zhfrad4jmlgxlbr-findutils-4.10.0/bin:/nix/store/7jk4jrd99ngnm9iczcf63mfxqba0ak2y-diffutils-3.10/bin:/nix/store/gjlh1zvckhz0qv795lnzgw2zciklbzj2-gnused-4.9/bin:/nix/store/vsyc8jhsr4d9lm2r8yqq9n3j4i66inlj-gnugrep-3.11/bin:/nix/store/9hifsxkcrkvvb712ghnr3gy5g1aiym2d-gawk-5.2.2/bin:/nix/store/l2l5xr2zczq19gqpqz4j8vxxia1j41s1-gnutar-1.35/bin:/nix/store/164s7a7yscnicprzrr78bvk45d77a3yg-gzip-1.13/bin:/nix/store/f8p74dj4r4my8sw5prmm3y4ddkz7591j-bzip2-1.0.8-bin/bin:/nix/store/axrdky652lsmif6m5i8b55q91v4ly4gy-gnumake-4.4.1/bin:/nix/store/izpf49b74i15pcr9708s3xdwyqs4jxwl-bash-5.2p32/bin:/nix/store/7wg4bz2sika3wd7541rndbnwcq6k9h8v-patch-2.7.6/bin:/nix/store/02mf752h7f5fn7989awzca4ygy94k7w7-xz-5.6.2-bin/bin:/nix/store/fv56zpi80jpakbfmv16r60xvyqwzff6r-file-5.45/bin'
export PATH
PS4='+ '
PYTHONHASHSEED='0'
export PYTHONHASHSEED
PYTHONNOUSERSITE='1'
export PYTHONNOUSERSITE
PYTHONPATH='/nix/store/454ipy9klkqcd2m5dgqzh92pl36jxqpv-python3.12-azure-cli-2.64.0/lib/python3.12/site-packages:/nix/store/anf041rpwqaz10l2gzwaw4midgsfq97s-python3.12-antlr4-python3-runtime-4.13.0/lib/python3.12/site-packages:/nix/store/h3i0acpmr8mrjx07519xxmidv8mpax4y-python3-3.12.5/lib/python3.12/site-packages:/nix/store/jdm7d86w6gnx8jkammdxh8wgy3h9864l-python3.12-azure-appconfiguration-1.7.1/lib/python3.12/site-packages:/nix/store/vvpdyjwsw1fgq9xwvyzxzj2qkkxlgp03-python3.12-azure-core-1.30.2/lib/python3.12/site-packages:/nix/store/aiz4dvsx8hpchv4p8vkb38cz3bjxnd2d-python3.12-requests-2.32.3/lib/python3.12/site-packages:/nix/store/gwq2l5yzxz4r9r3mjd3dd20nir7krxn2-python3.12-brotlicffi-1.1.0.0/lib/python3.12/site-packages:/nix/store/0jzljimwigmf28kz0323vv6xbkg21g6w-python3.12-cffi-1.17.0/lib/python3.12/site-packages:/nix/store/f4kd84nwjrac6sbkgb3w8q2jmfdnq9vn-python3.12-pycparser-2.22/lib/python3.12/site-packages:/nix/store/r0nmaqlf3s730inv37hyh8in1hm7xf2n-python3.12-certifi-2024.07.04/lib/python3.12/site-packages:/nix/store/mdjc15jlsywd76vzf0mkaxy7qdv6lk7h-python3.12-charset-normalizer-3.3.2/lib/python3.12/site-packages:/nix/store/c191z6513b56a0rh3v9afqjcqzlqrlvr-python3.12-idna-3.7/lib/python3.12/site-packages:/nix/store/bk5iap4crdi7ih942zsz7w8pc700yp5v-python3.12-urllib3-2.2.2/lib/python3.12/site-packages:/nix/store/rgfl07w7jjb0mmxgifzyca6g6fh6cq36-python3.12-six-1.16.0/lib/python3.12/site-packages:/nix/store/90ysgnzazl1nnwjqdqn9b0py5k2f5wn5-python3.12-typing-extensions-4.12.2/lib/python3.12/site-packages:/nix/store/8pwp5ic7cn3rrmqvp7fskshkxl3886x9-python3.12-isodate-0.6.1/lib/python3.12/site-packages:/nix/store/adc0b5l714n8gg91sjl1bx08z9pvi957-python3.12-azure-batch-14.2.0/lib/python3.12/site-packages:/nix/store/j1ji6bhj68wp2jnkvl87fr1610lf6gyz-python3.12-azure-common-1.1.28/lib/python3.12/site-packages:/nix/store/hvk94smj42xjxgys00d2kvdysyiz0gh9-python3.12-azure-nspkg-3.0.2/lib/python3.12/site-packages:/nix/store/gznq1mcl8bj4cmp5i3wj9qqv4djwwin2-python3.12-msrestazure-0.6.4/lib/python3.12/site-packages:/nix/store/lci3fl13imi1mphhhi94mp2r9g2mh0y8-python3.12-adal-1.2.7/lib/python3.12/site-packages:/nix/store/jfjadyx625y7bfswvhypis7xqzalsyk2-python3.12-pyjwt-2.9.0/lib/python3.12/site-packages:/nix/store/22d4sr968zx6l3sl7xrzcq4z18frqb7m-python3.12-python-dateutil-2.9.0.post0/lib/python3.12/site-packages:/nix/store/mk400dwmm87km13q7hh3cs9w6xfj8h8a-python3.12-msrest-0.7.1/lib/python3.12/site-packages:/nix/store/7hj8j0x9kc8h7p91lwck2kgrjdq0aayi-python3.12-aiodns-3.2.0/lib/python3.12/site-packages:/nix/store/v8h5m4iyws6rr0yj1f6hw1353pqklgvy-python3.12-pycares-4.4.0/lib/python3.12/site-packages:/nix/store/ffhbrjzvx1p2yi5iv9gkaxafz0b28dy7-python3.12-aiohttp-3.10.5/lib/python3.12/site-packages:/nix/store/kyxs4xbdw9sdcz90w5lzxc3piiva0gpr-python3.12-aiohappyeyeballs-2.3.6/lib/python3.12/site-packages:/nix/store/i8fan7ly4nqzam5rx4www1ggabzan8gl-python3.12-attrs-23.2.0/lib/python3.12/site-packages:/nix/store/yjq642rvh9vlfhkn5lg3d6zp385ff6vz-python3.12-multidict-6.0.5/lib/python3.12/site-packages:/nix/store/djbqdqgd27dd56hw3iq8jsvrl0z3sslv-python3.12-async-timeout-4.0.3/lib/python3.12/site-packages:/nix/store/k9la7d6kakr752l4vds7m91c9xfwb8wr-python3.12-yarl-1.9.4/lib/python3.12/site-packages:/nix/store/zkawlhgya3843z8b9yampgsipkxvk31n-python3.12-frozenlist-1.4.1/lib/python3.12/site-packages:/nix/store/vvr2z5nk55aqvm2wa1kwcwpq278097zd-python3.12-aiosignal-1.3.1/lib/python3.12/site-packages:/nix/store/14pz95mkissy2cb393rycc2w0xb9ia0v-python3.12-brotli-1.1.0/lib/python3.12/site-packages:/nix/store/y018jmspqk2216y996hdm13yzigby3gc-python3.12-requests-oauthlib-2.0.0/lib/python3.12/site-packages:/nix/store/1p7yjjvrll8v9dcw6wy5dpchvk4jd7bp-python3.12-oauthlib-3.2.2/lib/python3.12/site-packages:/nix/store/qifynzww8z3c9siqbf6qdgpdrrbr6nzp-python3.12-azure-cli-core-2.64.0/lib/python3.12/site-packages:/nix/store/k6pyxc68js2zrmqprg1w47i2xxk2mxl2-python3.12-argcomplete-3.4.0/lib/python3.12/site-packages:/nix/store/8qhkn4iwqyc8vy8fhyjw484rdrlikm2i-python3.12-azure-cli-telemetry-1.1.0/lib/python3.12/site-packages:/nix/store/041f39yy9w3x3bbbx9axlsq5pm63yddl-python3.12-applicationinsights-0.11.10/lib/python3.12/site-packages:/nix/store/gbk8pgnz74hhjwb9f524bfnh88v8y60c-python3.12-portalocker-2.8.2/lib/python3.12/site-packages:/nix/store/p5f3h0qhy9ndi2bg6zx3m9ix1vbmy4jq-python3.12-redis-5.0.6/lib/python3.12/site-packages:/nix/store/cwfjwjxar2lbslrv7ylfhs71khbd1c7s-python3.12-deprecated-1.2.14/lib/python3.12/site-packages:/nix/store/gk1hl6dr6v54hjazcqakgdq1y8sxmap1-python3.12-wrapt-1.16.0/lib/python3.12/site-packages:/nix/store/zxl97260xfw4pd13jrnkaghkalbin3y5-python3.12-packaging-24.1/lib/python3.12/site-packages:/nix/store/3m7hv4wmdjlcj3dfmm1nazgijv4nrqir-python3.12-azure-mgmt-core-1.4.0/lib/python3.12/site-packages:/nix/store/j4mv1n2srn2nil4aghdnsz0fdzjl267c-python3.12-cryptography-43.0.0/lib/python3.12/site-packages:/nix/store/raid425r86q2hmbvrv6m3z3qkkiwjgrg-python3.12-distro-1.9.0/lib/python3.12/site-packages:/nix/store/dl1xvp74i1rbd8m869a1vjai1c54yci1-python3.12-humanfriendly-10.0/lib/python3.12/site-packages:/nix/store/fc674xxr4yxpik6xz64ws68nr4332d9w-python3.12-jmespath-1.0.1/lib/python3.12/site-packages:/nix/store/21z1mgcchfvww1fwp57agvbfqx3s3g3d-python3.12-knack-0.12.0/lib/python3.12/site-packages:/nix/store/khgi868sq8lm70yzv0xlrsbcjig9jqm9-python3.12-colorama-0.4.6/lib/python3.12/site-packages:/nix/store/3n1zrmj8y18gw15p1m9dg2sgfhn8h34w-python3.12-pygments-2.18.0/lib/python3.12/site-packages:/nix/store/84b7b30qi2v9x63pqda03z0z1yfdgq0p-python3.12-pyyaml-6.0.2/lib/python3.12/site-packages:/nix/store/cp2w8i43ikzc5z3phc95d4agpnabd5md-python3.12-tabulate-0.9.0/lib/python3.12/site-packages:/nix/store/sm86v69631jxrbq0wgvdm03npjpvawlv-python3.12-msal-extensions-1.2.0/lib/python3.12/site-packages:/nix/store/srrrr85zidkx3mcvsys5qj3y2s8v74x4-python3.12-msal-1.30.0/lib/python3.12/site-packages:/nix/store/mrmv5mhwvbgra450h1xpf2pjyabvlqxk-python3.12-paramiko-3.4.0/lib/python3.12/site-packages:/nix/store/r7n3nq9mscbr4966ly983wqmq4gx4vzm-python3.12-bcrypt-4.1.3/lib/python3.12/site-packages:/nix/store/kz5r0f77km1p36vadvbva9wy726ziv4i-python3.12-pyasn1-0.6.0/lib/python3.12/site-packages:/nix/store/n8jg39446y8qk0jca12yviffiw8j16sr-python3.12-pynacl-1.5.0/lib/python3.12/site-packages:/nix/store/021f5qi4ma011hcsrpw1bdfsiwclb7x5-python3.12-pkginfo-1.11.1/lib/python3.12/site-packages:/nix/store/8gv60b3hhvvzq7kfwcs5pldbwny1xfbk-python3.12-psutil-6.0.0/lib/python3.12/site-packages:/nix/store/gi7fh73gzy4wf46fzw1biylrxwxckan3-python3.12-pyopenssl-24.1.0/lib/python3.12/site-packages:/nix/store/2spvc5znb2wnzh890z3rbq9dfr0lj1z3-python3.12-pysocks-1.7.1/lib/python3.12/site-packages:/nix/store/9sv972aas6zblr15xxmr2mpnwzg29b49-python3.12-azure-cosmos-4.7.0/lib/python3.12/site-packages:/nix/store/52h9lpxh7hh1xm4qm4zww85dci7dkzd6-python3.12-azure-data-tables-12.5.0/lib/python3.12/site-packages:/nix/store/inr1f3qxlpbwlvh2my928n5zwlx9ka3a-python3.12-azure-datalake-store-0.0.53/lib/python3.12/site-packages:/nix/store/s4s6sqnxsczpm8mzb6irxnd9d7js2vag-python3.12-azure-graphrbac-0.61.1/lib/python3.12/site-packages:/nix/store/n1f63qxxacrvpgjwss7vr83rydhmfrd3-python3.12-azure-keyvault-administration-4.4.0/lib/python3.12/site-packages:/nix/store/msr8dap90d3g4g74wrgzgrvg2nak7bca-python3.12-azure-keyvault-certificates-4.8.0/lib/python3.12/site-packages:/nix/store/x2wk9xy85dyrm7kxkhni2qhb2zwknw9d-python3.12-azure-keyvault-keys-4.9.0/lib/python3.12/site-packages:/nix/store/zz3qaim96vx2d2k233mydq3lhgqqisw5-python3.12-azure-keyvault-secrets-4.8.0/lib/python3.12/site-packages:/nix/store/gnq60pk5f3v33kmm0lna7yiqfq05lacb-python3.12-azure-mgmt-advisor-9.0.0/lib/python3.12/site-packages:/nix/store/d3mnr2jcpnd3ss85wbi4klykmf0j3gm2-python3.12-azure-mgmt-apimanagement-4.0.1/lib/python3.12/site-packages:/nix/store/2yzanafdy6anymkhk7684qkav8x9xk1w-python3.12-azure-mgmt-appconfiguration-3.0.0/lib/python3.12/site-packages:/nix/store/1ywg48zv20xc4cbd4cd1bnaavza6sgm6-python3.12-azure-mgmt-appcontainers-3.1.0/lib/python3.12/site-packages:/nix/store/3aqgkij6wzs6dvwsiz2ixhh1wmyc4zix-python3.12-azure-mgmt-applicationinsights-4.0.0/lib/python3.12/site-packages:/nix/store/ddnxrhbv9whd56h36d0bc0hxq6xys3q8-python3.12-azure-mgmt-authorization-4.0.0/lib/python3.12/site-packages:/nix/store/0llnm95ikg24h6kgfjgdrwppcc23j7v0-python3.12-azure-mgmt-batchai-7.0.0b1/lib/python3.12/site-packages:/nix/store/yqvvmajx6nny9lckdcsxf82d6707wvg1-python3.12-azure-mgmt-nspkg-3.0.2/lib/python3.12/site-packages:/nix/store/h8pd85bza1s9b4fc4cpmm1rb5fqmaw92-python3.12-azure-mgmt-batch-17.3.0/lib/python3.12/site-packages:/nix/store/89hfh0316p4askj3yqk1i9v7frym0dms-python3.12-azure-mgmt-billing-6.0.0/lib/python3.12/site-packages:/nix/store/fk73rsaca3x1fsizapw33aw0hqy5z9n1-python3.12-azure-mgmt-botservice-2.0.0/lib/python3.12/site-packages:/nix/store/1wkqcr0s32fibc2zzp1zhc7qrdwz776f-python3.12-azure-mgmt-cdn-12.0.0/lib/python3.12/site-packages:/nix/store/mp4imifxhb5q9zv3igzarlcnl67g4y25-python3.12-azure-mgmt-cognitiveservices-13.5.0/lib/python3.12/site-packages:/nix/store/sra1i6qxn1j7s78mlh4b0dz8svqn0z1r-python3.12-azure-mgmt-compute-33.0.0/lib/python3.12/site-packages:/nix/store/bijapn3d6ms5ml80znfm447q64z82sag-python3.12-azure-mgmt-common-0.20.0/lib/python3.12/site-packages:/nix/store/45bq4g8hzklixprsxfp5g0ias5irznhp-python3.12-azure-mgmt-containerinstance-10.1.0/lib/python3.12/site-packages:/nix/store/brvsxsalrigvkl8vvfjmq13z5fmc1h3d-python3.12-azure-mgmt-containerregistry-10.3.0/lib/python3.12/site-packages:/nix/store/i7hs2mza1law3brx4s9jyvz2drs7rdk9-python3.12-azure-mgmt-containerservice-32.0.0/lib/python3.12/site-packages:/nix/store/5mzk2rlgs6a3yb2w78x6qxlgjjpa6dxl-python3.12-azure-mgmt-cosmosdb-9.5.1/lib/python3.12/site-packages:/nix/store/rs7m06gfdjlq28z9y506x32fgym383ai-python3.12-azure-mgmt-databoxedge-1.0.0/lib/python3.12/site-packages:/nix/store/vml1ibnxlxl3a8bdkpwygahawrby941s-python3.12-azure-mgmt-datamigration-10.0.0/lib/python3.12/site-packages:/nix/store/0qc0clc2gx3jsmd0w9565iyygcxkn90k-python3.12-azure-mgmt-devtestlabs-4.0.0/lib/python3.12/site-packages:/nix/store/gs7b2hbg1gf3a8399mdnpqisapww4pk4-python3.12-azure-mgmt-dns-8.1.0/lib/python3.12/site-packages:/nix/store/h96p7fxx7bqm2yf6iqrrg225f0dp6zhn-python3.12-azure-mgmt-eventgrid-10.2.0b2/lib/python3.12/site-packages:/nix/store/9h0hr3cj0iin8sadq251ymdz4lih2r9i-python3.12-azure-mgmt-eventhub-11.0.0/lib/python3.12/site-packages:/nix/store/2vv3p08iyqgdgp2ic7qpp2vxpjazg23n-python3.12-azure-mgmt-extendedlocation-1.1.0/lib/python3.12/site-packages:/nix/store/rrrx49f2ix2c1037ikrrvrnk587sbyza-python3.12-azure-mgmt-hdinsight-9.0.0b3/lib/python3.12/site-packages:/nix/store/0cgyimz5pnzkl6y56v3d86nj1d6rfflz-python3.12-azure-mgmt-imagebuilder-1.4.0/lib/python3.12/site-packages:/nix/store/xh7x90w2bz0bp88vnlz79bgz7f7vn0p1-python3.12-azure-mgmt-iotcentral-9.0.0/lib/python3.12/site-packages:/nix/store/5n33hjni6qyb6gmygmnk2yl0f7b9wz38-python3.12-azure-mgmt-iothub-3.0.0/lib/python3.12/site-packages:/nix/store/sck4r53qzn2akm73w3jhf5sgf75ccv5q-python3.12-azure-mgmt-iothubprovisioningservices-1.1.0/lib/python3.12/site-packages:/nix/store/fy6hbiccx3w565w06gab2kfqxdn0wlkm-python3.12-azure-mgmt-keyvault-10.3.1/lib/python3.12/site-packages:/nix/store/a7lxzq805ykkvscnc9x2ik1yvm2v1n8w-python3.12-azure-mgmt-kusto-0.3.0/lib/python3.12/site-packages:/nix/store/q37syb5cg0migcklc18x17hg5jarhry7-python3.12-azure-mgmt-loganalytics-12.0.0/lib/python3.12/site-packages:/nix/store/pa2kb2vvqgd3ymv9vzvf9zmnh7rhvg5h-python3.12-azure-mgmt-managedservices-6.0.0/lib/python3.12/site-packages:/nix/store/hw87kcvlzi8ybgviv4v3b4z6f61kshzr-python3.12-azure-mgmt-managementgroups-1.0.0/lib/python3.12/site-packages:/nix/store/gsq04zddzj20rwwv0y4d0lq5fb69x40h-python3.12-azure-mgmt-maps-2.1.0/lib/python3.12/site-packages:/nix/store/3kal1zaznn3v3zm70w95jhpypg6vwxsj-python3.12-azure-mgmt-marketplaceordering-1.1.0/lib/python3.12/site-packages:/nix/store/d77kzfnjws8s38h7zczygg35w2q47qvw-python3.12-azure-mgmt-media-9.0.0/lib/python3.12/site-packages:/nix/store/356c9p99376namn7bcjvl76nbad7ki83-python3.12-azure-mgmt-monitor-6.0.2/lib/python3.12/site-packages:/nix/store/yhsmf64wzwx64laiy9wf73ibxgqqn9bi-python3.12-azure-mgmt-msi-7.0.0/lib/python3.12/site-packages:/nix/store/yqsssln2raxl79984kbm2a6aij5gp4h1-python3.12-azure-mgmt-netapp-13.2.0/lib/python3.12/site-packages:/nix/store/h95x110qww1lbbik9sjlxwpgn89jk05s-python3.12-azure-mgmt-policyinsights-1.0.0/lib/python3.12/site-packages:/nix/store/hqxdrg18w8vxf5f8fzaxa46s8zcz8r5z-python3.12-azure-mgmt-privatedns-1.1.0/lib/python3.12/site-packages:/nix/store/lyh54bbb9avj9inkmcy8sgvrl5md8d18-python3.12-azure-mgmt-rdbms-10.2.0b16/lib/python3.12/site-packages:/nix/store/ywagxf4345p74s8kksmrjpvfgzj5naia-python3.12-azure-mgmt-recoveryservicesbackup-9.1.0/lib/python3.12/site-packages:/nix/store/1wk0xi5p7lna8qkrz86kmmfh5sk18ddc-python3.12-azure-mgmt-recoveryservices-3.0.0/lib/python3.12/site-packages:/nix/store/dq62cc0lw9yx5cpaxs7m8aqlrif9pivr-python3.12-azure-mgmt-redis-14.4.0/lib/python3.12/site-packages:/nix/store/480vxpambd2jn9pmraljr98zbr4vb0y2-python3.12-azure-mgmt-redhatopenshift-1.5.0/lib/python3.12/site-packages:/nix/store/bykz5bz2wqnxlz6k5fakiinxd2xxx9z3-python3.12-azure-mgmt-resource-23.1.1/lib/python3.12/site-packages:/nix/store/fprrppf3gv343a3pjlnb1j4zxxfc2pwn-python3.12-azure-mgmt-search-9.1.0/lib/python3.12/site-packages:/nix/store/z1gnxallh9yykrf9zfhz0y09mhnm4nph-python3.12-azure-mgmt-security-7.0.0/lib/python3.12/site-packages:/nix/store/6cwz3ysrp2pbcyq0vc0xhfh87yb2wvhq-python3.12-azure-mgmt-servicebus-8.2.0/lib/python3.12/site-packages:/nix/store/bzhlkf8hmqcp42bbqsyiq9cqxhplzpml-python3.12-azure-mgmt-servicefabricmanagedclusters-2.0.0/lib/python3.12/site-packages:/nix/store/1cj4jn52jmws9cc1in1a8daha89vdjq1-python3.12-azure-mgmt-servicelinker-1.1.0/lib/python3.12/site-packages:/nix/store/9mdbyndp0ws4kh9f3zlnw69hjvngjkil-python3.12-azure-mgmt-servicefabric-2.1.0/lib/python3.12/site-packages:/nix/store/az2lka6n6gnkynmryqn2kakxzf8c2bzc-python3.12-azure-mgmt-signalr-2.0.0b1/lib/python3.12/site-packages:/nix/store/8ylvakh6j5c7xq1r3dzv70621nij6r11-python3.12-azure-mgmt-sqlvirtualmachine-1.0.0b5/lib/python3.12/site-packages:/nix/store/ipj07isqb6b7k9fxg52s44m22dmfxr1q-python3.12-azure-mgmt-sql-4.0.0b17/lib/python3.12/site-packages:/nix/store/80lb6l1bbl8pwvjmbgfamx34j2dg1lx9-python3.12-azure-mgmt-storage-21.2.1/lib/python3.12/site-packages:/nix/store/5g2h8v3yn1hfhyh14mkk710jmd6ibk17-python3.12-azure-mgmt-synapse-2.1.0b5/lib/python3.12/site-packages:/nix/store/xmnrlhfmflxwq735n6nj9csyqwy6mykr-python3.12-azure-mgmt-trafficmanager-1.1.0/lib/python3.12/site-packages:/nix/store/7wwgil818ycdy4lwlxf41qz7z7m49axb-python3.12-azure-mgmt-web-7.3.1/lib/python3.12/site-packages:/nix/store/cnvmyqkqkv2pvpv5y1c7bryx8ffdhzy7-python3.12-azure-monitor-query-1.4.0/lib/python3.12/site-packages:/nix/store/5gzg5yiszmaj10hvbm6ph88q2lni0hxz-python3.12-azure-multiapi-storage-1.3.0/lib/python3.12/site-packages:/nix/store/ka3g53q3f51bnvjj2cw9ddwkwvjpkz9s-python3.12-azure-storage-common-2.1.0/lib/python3.12/site-packages:/nix/store/nz5c19bx5vy8icadgjwf29k7vn37flb6-python3.12-azure-synapse-accesscontrol-0.7.0/lib/python3.12/site-packages:/nix/store/3ilhgn8dqbmkjmgmr2ihkrshcnwy8yg8-python3.12-azure-synapse-artifacts-0.19.0/lib/python3.12/site-packages:/nix/store/biiq5hmlhmyl55g2xnhvq9d5k5wsvdpx-python3.12-azure-synapse-managedprivateendpoints-0.4.0/lib/python3.12/site-packages:/nix/store/c1g7h4q4pcgfhgy1la75qsl09pyi8nf0-python3.12-azure-synapse-spark-0.7.0/lib/python3.12/site-packages:/nix/store/lnpjnir33vbf5bw1ld88qixclbc6zdxf-python3.12-chardet-5.2.0/lib/python3.12/site-packages:/nix/store/86c9042239j9hfh7dapm8ljdnvqb3fjf-python3.12-fabric-3.2.2/lib/python3.12/site-packages:/nix/store/v5w53qzjxw80j1804i9pyc34s3ibbcsw-python3.12-invoke-2.2.0/lib/python3.12/site-packages:/nix/store/627hzfhckvl1v3d190zz9d74zsnvdiw7-python3.12-decorator-5.1.1/lib/python3.12/site-packages:/nix/store/jnqzq7k4zavyjidyj5zks0bs8c5lbzdr-python3.12-javaproperties-0.8.1/lib/python3.12/site-packages:/nix/store/pg743fpc57d5cjj16xbmfn8g8r1yszik-python3.12-jsondiff-2.0.0/lib/python3.12/site-packages:/nix/store/jr07klhr9r4zzil0njw42xvxnjg0q7v9-python3.12-pycomposefile-0.0.31/lib/python3.12/site-packages:/nix/store/9mjxm42qm2841a3k1q5bllqnm6z69mhh-python3.12-pygithub-2.4.0/lib/python3.12/site-packages:/nix/store/1k63m5lf45xv0mh4is7xnvrbkpq9223h-python3.12-scp-0.15.0/lib/python3.12/site-packages:/nix/store/sh22gl9ylbdpf7bcxbh5sb71ygn3iinr-python3.12-semver-3.0.2/lib/python3.12/site-packages:/nix/store/ngjcgrbr270qb0c9i1qxysz811bldrck-python3.12-sshtunnel-0.4.0/lib/python3.12/site-packages:/nix/store/1bgrpq2kpsngln26bwnz35mk9kf6l26g-python3.12-websocket-client-1.8.0/lib/python3.12/site-packages:/nix/store/yzib5zhyrp79js86cpy648khxf1vnizj-python3.12-python-socks-2.4.4/lib/python3.12/site-packages:/nix/store/9l5fvlg1495842ajijwcx3qx09kr6mys-python3.12-trio-0.25.0/lib/python3.12/site-packages:/nix/store/9i4n07clbj50d1wky79i5wq0dyvkhd0c-python3.12-outcome-1.3.0.post0/lib/python3.12/site-packages:/nix/store/0awc9c3m3q3cfg0g1yjy46ylg7rnc30r-python3.12-sniffio-1.3.1/lib/python3.12/site-packages:/nix/store/p7x4jfm5gkgprrrfj098v4r596c1mbqk-python3.12-sortedcontainers-2.4.0/lib/python3.12/site-packages:/nix/store/h17rzg57kxp3kj145r8dp87dbc3vl004-python3.12-curio-1.6/lib/python3.12/site-packages:/nix/store/jz0p9lcnzn43mr24jyyww61iw5cjydrj-python3.12-xmltodict-0.13.0/lib/python3.12/site-packages:/nix/store/l7idy2qiiv0v0b6khfjvz3l5k6mnm47l-python3.12-setuptools-72.1.0/lib/python3.12/site-packages'
export PYTHONPATH
RANLIB='ranlib'
export RANLIB
READELF='readelf'
export READELF
SHELL='/nix/store/izpf49b74i15pcr9708s3xdwyqs4jxwl-bash-5.2p32/bin/bash'
export SHELL
SIZE='size'
export SIZE
SOURCE_DATE_EPOCH='315532800'
export SOURCE_DATE_EPOCH
STRINGS='strings'
export STRINGS
STRIP='strip'
export STRIP
XDG_DATA_DIRS='/nix/store/pxy4dndr8z74lc7iza7m691sv62bzsv0-vscode-1.93.0/share:/nix/store/454ipy9klkqcd2m5dgqzh92pl36jxqpv-python3.12-azure-cli-2.64.0/share:/nix/store/h3i0acpmr8mrjx07519xxmidv8mpax4y-python3-3.12.5/share:/nix/store/v5w53qzjxw80j1804i9pyc34s3ibbcsw-python3.12-invoke-2.2.0/share:/nix/store/dzd6g1ww6wgpslp1wf6h2xi95l3ghhd8-terraform-1.9.6/share:/nix/store/k97fic16vmpf9z6vjx5dgd6rxcvv5wwh-patchelf-0.15.0/share'
export XDG_DATA_DIRS
_PYTHON_HOST_PLATFORM='linux-x86_64'
export _PYTHON_HOST_PLATFORM
_PYTHON_SYSCONFIGDATA_NAME='_sysconfigdata__linux_x86_64-linux-gnu'
export _PYTHON_SYSCONFIGDATA_NAME
__structuredAttrs=''
export __structuredAttrs
_substituteStream_has_warned_replace_deprecation='false'
buildInputs='/nix/store/ynvrgsngg84fap3w1nkzkvam2s97j4lm-python3-3.11.12-env'
export buildInputs
buildPhase='{ echo "------------------------------------------------------------";
  echo " WARNING: the existence of this path is not guaranteed.";
  echo " It is an internal implementation detail for pkgs.mkShell.";
  echo "------------------------------------------------------------";
  echo;
  # Record all build inputs as runtime dependencies
  export;
} >> "$out"
'
export buildPhase
builder='/nix/store/izpf49b74i15pcr9708s3xdwyqs4jxwl-bash-5.2p32/bin/bash'
export builder
cmakeFlags=''
export cmakeFlags
configureFlags=''
export configureFlags
defaultBuildInputs=''
defaultNativeBuildInputs='/nix/store/k97fic16vmpf9z6vjx5dgd6rxcvv5wwh-patchelf-0.15.0 /nix/store/9l3havpzc3w1xggd19l5c395az4yh449-update-autotools-gnu-config-scripts-hook /nix/store/h9lc1dpi14z7is86ffhl3ld569138595-audit-tmpdir.sh /nix/store/m54bmrhj6fqz8nds5zcj97w9s9bckc9v-compress-man-pages.sh /nix/store/wgrbkkaldkrlrni33ccvm3b6vbxzb656-make-symlinks-relative.sh /nix/store/5yzw0vhkyszf2d179m0qfkgxmp5wjjx4-move-docs.sh /nix/store/fyaryjvghbkpfnsyw97hb3lyb37s1pd6-move-lib64.sh /nix/store/kd4xwxjpjxi71jkm6ka0np72if9rm3y0-move-sbin.sh /nix/store/pag6l61paj1dc9sv15l7bm5c17xn5kyk-move-systemd-user-units.sh /nix/store/jivxp510zxakaaic7qkrb7v1dd2rdbw9-multiple-outputs.sh /nix/store/12lvf0c7xric9cny7slvf9cmhypl1p67-patch-shebangs.sh /nix/store/cickvswrvann041nqxb0rxilc46svw1n-prune-libtool-files.sh /nix/store/xyff06pkhki3qy1ls77w10s0v79c9il0-reproducible-builds.sh /nix/store/aazf105snicrlvyzzbdj85sx4179rpfp-set-source-date-epoch-to-latest.sh /nix/store/gps9qrh99j7g02840wv5x78ykmz30byp-strip.sh /nix/store/zznja5f8v3jafffyah1rk46vpfcn38dv-gcc-wrapper-13.3.0'
depsBuildBuild=''
export depsBuildBuild
depsBuildBuildPropagated=''
export depsBuildBuildPropagated
depsBuildTarget=''
export depsBuildTarget
depsBuildTargetPropagated=''
export depsBuildTargetPropagated
depsHostHost=''
export depsHostHost
depsHostHostPropagated=''
export depsHostHostPropagated
depsTargetTarget=''
export depsTargetTarget
depsTargetTargetPropagated=''
export depsTargetTargetPropagated
doCheck=''
export doCheck
doInstallCheck=''
export doInstallCheck
dontAddDisableDepTrack='1'
export dontAddDisableDepTrack
declare -a envBuildBuildHooks=('addPythonPath' 'sysconfigdataHook' )
declare -a envBuildHostHooks=('addPythonPath' 'sysconfigdataHook' )
declare -a envBuildTargetHooks=('addPythonPath' 'sysconfigdataHook' )
declare -a envHostHostHooks=('ccWrapper_addCVars' 'bintoolsWrapper_addLDVars' )
declare -a envHostTargetHooks=('ccWrapper_addCVars' 'bintoolsWrapper_addLDVars' )
declare -a envTargetTargetHooks=()
declare -a fixupOutputHooks=('if [ -z "${dontPatchELF-}" ]; then patchELF "$prefix"; fi' 'if [[ -z "${noAuditTmpdir-}" && -e "$prefix" ]]; then auditTmpdir "$prefix"; fi' 'if [ -z "${dontGzipMan-}" ]; then compressManPages "$prefix"; fi' '_moveLib64' '_moveSbin' '_moveSystemdUserUnits' 'patchShebangsAuto' '_pruneLibtoolFiles' '_doStrip' )
guess='12'
initialPath='/nix/store/0kg70swgpg45ipcz3pr2siidq9fn6d77-coreutils-9.5 /nix/store/fnq94lw19pnwdl9p8zhfrad4jmlgxlbr-findutils-4.10.0 /nix/store/7jk4jrd99ngnm9iczcf63mfxqba0ak2y-diffutils-3.10 /nix/store/gjlh1zvckhz0qv795lnzgw2zciklbzj2-gnused-4.9 /nix/store/vsyc8jhsr4d9lm2r8yqq9n3j4i66inlj-gnugrep-3.11 /nix/store/9hifsxkcrkvvb712ghnr3gy5g1aiym2d-gawk-5.2.2 /nix/store/l2l5xr2zczq19gqpqz4j8vxxia1j41s1-gnutar-1.35 /nix/store/164s7a7yscnicprzrr78bvk45d77a3yg-gzip-1.13 /nix/store/f8p74dj4r4my8sw5prmm3y4ddkz7591j-bzip2-1.0.8-bin /nix/store/axrdky652lsmif6m5i8b55q91v4ly4gy-gnumake-4.4.1 /nix/store/izpf49b74i15pcr9708s3xdwyqs4jxwl-bash-5.2p32 /nix/store/7wg4bz2sika3wd7541rndbnwcq6k9h8v-patch-2.7.6 /nix/store/02mf752h7f5fn7989awzca4ygy94k7w7-xz-5.6.2-bin /nix/store/fv56zpi80jpakbfmv16r60xvyqwzff6r-file-5.45'
mesonFlags=''
export mesonFlags
name='nix-shell-env'
export name
nativeBuildInputs='/nix/store/pxy4dndr8z74lc7iza7m691sv62bzsv0-vscode-1.93.0 /nix/store/454ipy9klkqcd2m5dgqzh92pl36jxqpv-python3.12-azure-cli-2.64.0 /nix/store/vnz5ppyr98g1yfixhnbrk31rbq65jdgs-azure-functions-core-tools-4.0.5455 /nix/store/fyjxsgaygmizg6hh7rv5k6ldkvgrx7x5-bicep-0.29.47 /nix/store/dzd6g1ww6wgpslp1wf6h2xi95l3ghhd8-terraform-1.9.6 /nix/store/6q8n07g9fwhwzcsi4ch8vb8p9j342zq2-bash-language-server-5.4.0 /nix/store/zfcs674bivjj6daayni8m9bcp4859rjh-terraform-ls-0.34.3 /nix/store/0hk8xmshd0c6cmnp8wz4wn9w01jl0gmh-terraform-lsp-0.0.12 /nix/store/lvrml52cyhvz8r42vrvb051flf18srp2-basedpyright-1.17.5'
export nativeBuildInputs
out='/home/hedonicadapter/Documents/temp/examensarbete/outputs/out'
export out
outputBin='out'
outputDev='out'
outputDevdoc='REMOVE'
outputDevman='out'
outputDoc='out'
outputInclude='out'
outputInfo='out'
outputLib='out'
outputMan='out'
outputs='out'
export outputs
patches=''
export patches
phases='buildPhase'
export phases
pkg='/nix/store/zznja5f8v3jafffyah1rk46vpfcn38dv-gcc-wrapper-13.3.0'
declare -a pkgsBuildBuild=()
declare -a pkgsBuildHost=('/nix/store/pxy4dndr8z74lc7iza7m691sv62bzsv0-vscode-1.93.0' '/nix/store/454ipy9klkqcd2m5dgqzh92pl36jxqpv-python3.12-azure-cli-2.64.0' '/nix/store/anf041rpwqaz10l2gzwaw4midgsfq97s-python3.12-antlr4-python3-runtime-4.13.0' '/nix/store/h3i0acpmr8mrjx07519xxmidv8mpax4y-python3-3.12.5' '/nix/store/jdm7d86w6gnx8jkammdxh8wgy3h9864l-python3.12-azure-appconfiguration-1.7.1' '/nix/store/vvpdyjwsw1fgq9xwvyzxzj2qkkxlgp03-python3.12-azure-core-1.30.2' '/nix/store/aiz4dvsx8hpchv4p8vkb38cz3bjxnd2d-python3.12-requests-2.32.3' '/nix/store/gwq2l5yzxz4r9r3mjd3dd20nir7krxn2-python3.12-brotlicffi-1.1.0.0' '/nix/store/0jzljimwigmf28kz0323vv6xbkg21g6w-python3.12-cffi-1.17.0' '/nix/store/f4kd84nwjrac6sbkgb3w8q2jmfdnq9vn-python3.12-pycparser-2.22' '/nix/store/r0nmaqlf3s730inv37hyh8in1hm7xf2n-python3.12-certifi-2024.07.04' '/nix/store/mdjc15jlsywd76vzf0mkaxy7qdv6lk7h-python3.12-charset-normalizer-3.3.2' '/nix/store/c191z6513b56a0rh3v9afqjcqzlqrlvr-python3.12-idna-3.7' '/nix/store/bk5iap4crdi7ih942zsz7w8pc700yp5v-python3.12-urllib3-2.2.2' '/nix/store/rgfl07w7jjb0mmxgifzyca6g6fh6cq36-python3.12-six-1.16.0' '/nix/store/90ysgnzazl1nnwjqdqn9b0py5k2f5wn5-python3.12-typing-extensions-4.12.2' '/nix/store/8pwp5ic7cn3rrmqvp7fskshkxl3886x9-python3.12-isodate-0.6.1' '/nix/store/adc0b5l714n8gg91sjl1bx08z9pvi957-python3.12-azure-batch-14.2.0' '/nix/store/j1ji6bhj68wp2jnkvl87fr1610lf6gyz-python3.12-azure-common-1.1.28' '/nix/store/hvk94smj42xjxgys00d2kvdysyiz0gh9-python3.12-azure-nspkg-3.0.2' '/nix/store/gznq1mcl8bj4cmp5i3wj9qqv4djwwin2-python3.12-msrestazure-0.6.4' '/nix/store/lci3fl13imi1mphhhi94mp2r9g2mh0y8-python3.12-adal-1.2.7' '/nix/store/jfjadyx625y7bfswvhypis7xqzalsyk2-python3.12-pyjwt-2.9.0' '/nix/store/22d4sr968zx6l3sl7xrzcq4z18frqb7m-python3.12-python-dateutil-2.9.0.post0' '/nix/store/mk400dwmm87km13q7hh3cs9w6xfj8h8a-python3.12-msrest-0.7.1' '/nix/store/7hj8j0x9kc8h7p91lwck2kgrjdq0aayi-python3.12-aiodns-3.2.0' '/nix/store/v8h5m4iyws6rr0yj1f6hw1353pqklgvy-python3.12-pycares-4.4.0' '/nix/store/ffhbrjzvx1p2yi5iv9gkaxafz0b28dy7-python3.12-aiohttp-3.10.5' '/nix/store/kyxs4xbdw9sdcz90w5lzxc3piiva0gpr-python3.12-aiohappyeyeballs-2.3.6' '/nix/store/i8fan7ly4nqzam5rx4www1ggabzan8gl-python3.12-attrs-23.2.0' '/nix/store/yjq642rvh9vlfhkn5lg3d6zp385ff6vz-python3.12-multidict-6.0.5' '/nix/store/djbqdqgd27dd56hw3iq8jsvrl0z3sslv-python3.12-async-timeout-4.0.3' '/nix/store/k9la7d6kakr752l4vds7m91c9xfwb8wr-python3.12-yarl-1.9.4' '/nix/store/zkawlhgya3843z8b9yampgsipkxvk31n-python3.12-frozenlist-1.4.1' '/nix/store/vvr2z5nk55aqvm2wa1kwcwpq278097zd-python3.12-aiosignal-1.3.1' '/nix/store/14pz95mkissy2cb393rycc2w0xb9ia0v-python3.12-brotli-1.1.0' '/nix/store/y018jmspqk2216y996hdm13yzigby3gc-python3.12-requests-oauthlib-2.0.0' '/nix/store/1p7yjjvrll8v9dcw6wy5dpchvk4jd7bp-python3.12-oauthlib-3.2.2' '/nix/store/qifynzww8z3c9siqbf6qdgpdrrbr6nzp-python3.12-azure-cli-core-2.64.0' '/nix/store/k6pyxc68js2zrmqprg1w47i2xxk2mxl2-python3.12-argcomplete-3.4.0' '/nix/store/8qhkn4iwqyc8vy8fhyjw484rdrlikm2i-python3.12-azure-cli-telemetry-1.1.0' '/nix/store/041f39yy9w3x3bbbx9axlsq5pm63yddl-python3.12-applicationinsights-0.11.10' '/nix/store/gbk8pgnz74hhjwb9f524bfnh88v8y60c-python3.12-portalocker-2.8.2' '/nix/store/p5f3h0qhy9ndi2bg6zx3m9ix1vbmy4jq-python3.12-redis-5.0.6' '/nix/store/cwfjwjxar2lbslrv7ylfhs71khbd1c7s-python3.12-deprecated-1.2.14' '/nix/store/gk1hl6dr6v54hjazcqakgdq1y8sxmap1-python3.12-wrapt-1.16.0' '/nix/store/zxl97260xfw4pd13jrnkaghkalbin3y5-python3.12-packaging-24.1' '/nix/store/3m7hv4wmdjlcj3dfmm1nazgijv4nrqir-python3.12-azure-mgmt-core-1.4.0' '/nix/store/j4mv1n2srn2nil4aghdnsz0fdzjl267c-python3.12-cryptography-43.0.0' '/nix/store/raid425r86q2hmbvrv6m3z3qkkiwjgrg-python3.12-distro-1.9.0' '/nix/store/dl1xvp74i1rbd8m869a1vjai1c54yci1-python3.12-humanfriendly-10.0' '/nix/store/fc674xxr4yxpik6xz64ws68nr4332d9w-python3.12-jmespath-1.0.1' '/nix/store/21z1mgcchfvww1fwp57agvbfqx3s3g3d-python3.12-knack-0.12.0' '/nix/store/khgi868sq8lm70yzv0xlrsbcjig9jqm9-python3.12-colorama-0.4.6' '/nix/store/3n1zrmj8y18gw15p1m9dg2sgfhn8h34w-python3.12-pygments-2.18.0' '/nix/store/84b7b30qi2v9x63pqda03z0z1yfdgq0p-python3.12-pyyaml-6.0.2' '/nix/store/cp2w8i43ikzc5z3phc95d4agpnabd5md-python3.12-tabulate-0.9.0' '/nix/store/sm86v69631jxrbq0wgvdm03npjpvawlv-python3.12-msal-extensions-1.2.0' '/nix/store/srrrr85zidkx3mcvsys5qj3y2s8v74x4-python3.12-msal-1.30.0' '/nix/store/srrrr85zidkx3mcvsys5qj3y2s8v74x4-python3.12-msal-1.30.0' '/nix/store/mrmv5mhwvbgra450h1xpf2pjyabvlqxk-python3.12-paramiko-3.4.0' '/nix/store/r7n3nq9mscbr4966ly983wqmq4gx4vzm-python3.12-bcrypt-4.1.3' '/nix/store/kz5r0f77km1p36vadvbva9wy726ziv4i-python3.12-pyasn1-0.6.0' '/nix/store/n8jg39446y8qk0jca12yviffiw8j16sr-python3.12-pynacl-1.5.0' '/nix/store/021f5qi4ma011hcsrpw1bdfsiwclb7x5-python3.12-pkginfo-1.11.1' '/nix/store/8gv60b3hhvvzq7kfwcs5pldbwny1xfbk-python3.12-psutil-6.0.0' '/nix/store/b8nz856rfz8qf93mgcdzpqgahl7bf0vm-python3.12-pyopenssl-24.1.0-dev' '/nix/store/gi7fh73gzy4wf46fzw1biylrxwxckan3-python3.12-pyopenssl-24.1.0' '/nix/store/2spvc5znb2wnzh890z3rbq9dfr0lj1z3-python3.12-pysocks-1.7.1' '/nix/store/9sv972aas6zblr15xxmr2mpnwzg29b49-python3.12-azure-cosmos-4.7.0' '/nix/store/52h9lpxh7hh1xm4qm4zww85dci7dkzd6-python3.12-azure-data-tables-12.5.0' '/nix/store/inr1f3qxlpbwlvh2my928n5zwlx9ka3a-python3.12-azure-datalake-store-0.0.53' '/nix/store/s4s6sqnxsczpm8mzb6irxnd9d7js2vag-python3.12-azure-graphrbac-0.61.1' '/nix/store/n1f63qxxacrvpgjwss7vr83rydhmfrd3-python3.12-azure-keyvault-administration-4.4.0' '/nix/store/msr8dap90d3g4g74wrgzgrvg2nak7bca-python3.12-azure-keyvault-certificates-4.8.0' '/nix/store/x2wk9xy85dyrm7kxkhni2qhb2zwknw9d-python3.12-azure-keyvault-keys-4.9.0' '/nix/store/zz3qaim96vx2d2k233mydq3lhgqqisw5-python3.12-azure-keyvault-secrets-4.8.0' '/nix/store/gnq60pk5f3v33kmm0lna7yiqfq05lacb-python3.12-azure-mgmt-advisor-9.0.0' '/nix/store/d3mnr2jcpnd3ss85wbi4klykmf0j3gm2-python3.12-azure-mgmt-apimanagement-4.0.1' '/nix/store/2yzanafdy6anymkhk7684qkav8x9xk1w-python3.12-azure-mgmt-appconfiguration-3.0.0' '/nix/store/1ywg48zv20xc4cbd4cd1bnaavza6sgm6-python3.12-azure-mgmt-appcontainers-3.1.0' '/nix/store/3aqgkij6wzs6dvwsiz2ixhh1wmyc4zix-python3.12-azure-mgmt-applicationinsights-4.0.0' '/nix/store/ddnxrhbv9whd56h36d0bc0hxq6xys3q8-python3.12-azure-mgmt-authorization-4.0.0' '/nix/store/0llnm95ikg24h6kgfjgdrwppcc23j7v0-python3.12-azure-mgmt-batchai-7.0.0b1' '/nix/store/yqvvmajx6nny9lckdcsxf82d6707wvg1-python3.12-azure-mgmt-nspkg-3.0.2' '/nix/store/h8pd85bza1s9b4fc4cpmm1rb5fqmaw92-python3.12-azure-mgmt-batch-17.3.0' '/nix/store/89hfh0316p4askj3yqk1i9v7frym0dms-python3.12-azure-mgmt-billing-6.0.0' '/nix/store/fk73rsaca3x1fsizapw33aw0hqy5z9n1-python3.12-azure-mgmt-botservice-2.0.0' '/nix/store/1wkqcr0s32fibc2zzp1zhc7qrdwz776f-python3.12-azure-mgmt-cdn-12.0.0' '/nix/store/mp4imifxhb5q9zv3igzarlcnl67g4y25-python3.12-azure-mgmt-cognitiveservices-13.5.0' '/nix/store/sra1i6qxn1j7s78mlh4b0dz8svqn0z1r-python3.12-azure-mgmt-compute-33.0.0' '/nix/store/bijapn3d6ms5ml80znfm447q64z82sag-python3.12-azure-mgmt-common-0.20.0' '/nix/store/45bq4g8hzklixprsxfp5g0ias5irznhp-python3.12-azure-mgmt-containerinstance-10.1.0' '/nix/store/brvsxsalrigvkl8vvfjmq13z5fmc1h3d-python3.12-azure-mgmt-containerregistry-10.3.0' '/nix/store/i7hs2mza1law3brx4s9jyvz2drs7rdk9-python3.12-azure-mgmt-containerservice-32.0.0' '/nix/store/5mzk2rlgs6a3yb2w78x6qxlgjjpa6dxl-python3.12-azure-mgmt-cosmosdb-9.5.1' '/nix/store/rs7m06gfdjlq28z9y506x32fgym383ai-python3.12-azure-mgmt-databoxedge-1.0.0' '/nix/store/vml1ibnxlxl3a8bdkpwygahawrby941s-python3.12-azure-mgmt-datamigration-10.0.0' '/nix/store/0qc0clc2gx3jsmd0w9565iyygcxkn90k-python3.12-azure-mgmt-devtestlabs-4.0.0' '/nix/store/gs7b2hbg1gf3a8399mdnpqisapww4pk4-python3.12-azure-mgmt-dns-8.1.0' '/nix/store/h96p7fxx7bqm2yf6iqrrg225f0dp6zhn-python3.12-azure-mgmt-eventgrid-10.2.0b2' '/nix/store/9h0hr3cj0iin8sadq251ymdz4lih2r9i-python3.12-azure-mgmt-eventhub-11.0.0' '/nix/store/2vv3p08iyqgdgp2ic7qpp2vxpjazg23n-python3.12-azure-mgmt-extendedlocation-1.1.0' '/nix/store/rrrx49f2ix2c1037ikrrvrnk587sbyza-python3.12-azure-mgmt-hdinsight-9.0.0b3' '/nix/store/0cgyimz5pnzkl6y56v3d86nj1d6rfflz-python3.12-azure-mgmt-imagebuilder-1.4.0' '/nix/store/xh7x90w2bz0bp88vnlz79bgz7f7vn0p1-python3.12-azure-mgmt-iotcentral-9.0.0' '/nix/store/5n33hjni6qyb6gmygmnk2yl0f7b9wz38-python3.12-azure-mgmt-iothub-3.0.0' '/nix/store/sck4r53qzn2akm73w3jhf5sgf75ccv5q-python3.12-azure-mgmt-iothubprovisioningservices-1.1.0' '/nix/store/fy6hbiccx3w565w06gab2kfqxdn0wlkm-python3.12-azure-mgmt-keyvault-10.3.1' '/nix/store/a7lxzq805ykkvscnc9x2ik1yvm2v1n8w-python3.12-azure-mgmt-kusto-0.3.0' '/nix/store/q37syb5cg0migcklc18x17hg5jarhry7-python3.12-azure-mgmt-loganalytics-12.0.0' '/nix/store/pa2kb2vvqgd3ymv9vzvf9zmnh7rhvg5h-python3.12-azure-mgmt-managedservices-6.0.0' '/nix/store/hw87kcvlzi8ybgviv4v3b4z6f61kshzr-python3.12-azure-mgmt-managementgroups-1.0.0' '/nix/store/gsq04zddzj20rwwv0y4d0lq5fb69x40h-python3.12-azure-mgmt-maps-2.1.0' '/nix/store/3kal1zaznn3v3zm70w95jhpypg6vwxsj-python3.12-azure-mgmt-marketplaceordering-1.1.0' '/nix/store/d77kzfnjws8s38h7zczygg35w2q47qvw-python3.12-azure-mgmt-media-9.0.0' '/nix/store/356c9p99376namn7bcjvl76nbad7ki83-python3.12-azure-mgmt-monitor-6.0.2' '/nix/store/yhsmf64wzwx64laiy9wf73ibxgqqn9bi-python3.12-azure-mgmt-msi-7.0.0' '/nix/store/yqsssln2raxl79984kbm2a6aij5gp4h1-python3.12-azure-mgmt-netapp-13.2.0' '/nix/store/h95x110qww1lbbik9sjlxwpgn89jk05s-python3.12-azure-mgmt-policyinsights-1.0.0' '/nix/store/hqxdrg18w8vxf5f8fzaxa46s8zcz8r5z-python3.12-azure-mgmt-privatedns-1.1.0' '/nix/store/lyh54bbb9avj9inkmcy8sgvrl5md8d18-python3.12-azure-mgmt-rdbms-10.2.0b16' '/nix/store/ywagxf4345p74s8kksmrjpvfgzj5naia-python3.12-azure-mgmt-recoveryservicesbackup-9.1.0' '/nix/store/1wk0xi5p7lna8qkrz86kmmfh5sk18ddc-python3.12-azure-mgmt-recoveryservices-3.0.0' '/nix/store/dq62cc0lw9yx5cpaxs7m8aqlrif9pivr-python3.12-azure-mgmt-redis-14.4.0' '/nix/store/480vxpambd2jn9pmraljr98zbr4vb0y2-python3.12-azure-mgmt-redhatopenshift-1.5.0' '/nix/store/bykz5bz2wqnxlz6k5fakiinxd2xxx9z3-python3.12-azure-mgmt-resource-23.1.1' '/nix/store/fprrppf3gv343a3pjlnb1j4zxxfc2pwn-python3.12-azure-mgmt-search-9.1.0' '/nix/store/z1gnxallh9yykrf9zfhz0y09mhnm4nph-python3.12-azure-mgmt-security-7.0.0' '/nix/store/6cwz3ysrp2pbcyq0vc0xhfh87yb2wvhq-python3.12-azure-mgmt-servicebus-8.2.0' '/nix/store/bzhlkf8hmqcp42bbqsyiq9cqxhplzpml-python3.12-azure-mgmt-servicefabricmanagedclusters-2.0.0' '/nix/store/1cj4jn52jmws9cc1in1a8daha89vdjq1-python3.12-azure-mgmt-servicelinker-1.1.0' '/nix/store/9mdbyndp0ws4kh9f3zlnw69hjvngjkil-python3.12-azure-mgmt-servicefabric-2.1.0' '/nix/store/az2lka6n6gnkynmryqn2kakxzf8c2bzc-python3.12-azure-mgmt-signalr-2.0.0b1' '/nix/store/8ylvakh6j5c7xq1r3dzv70621nij6r11-python3.12-azure-mgmt-sqlvirtualmachine-1.0.0b5' '/nix/store/ipj07isqb6b7k9fxg52s44m22dmfxr1q-python3.12-azure-mgmt-sql-4.0.0b17' '/nix/store/80lb6l1bbl8pwvjmbgfamx34j2dg1lx9-python3.12-azure-mgmt-storage-21.2.1' '/nix/store/5g2h8v3yn1hfhyh14mkk710jmd6ibk17-python3.12-azure-mgmt-synapse-2.1.0b5' '/nix/store/xmnrlhfmflxwq735n6nj9csyqwy6mykr-python3.12-azure-mgmt-trafficmanager-1.1.0' '/nix/store/7wwgil818ycdy4lwlxf41qz7z7m49axb-python3.12-azure-mgmt-web-7.3.1' '/nix/store/cnvmyqkqkv2pvpv5y1c7bryx8ffdhzy7-python3.12-azure-monitor-query-1.4.0' '/nix/store/5gzg5yiszmaj10hvbm6ph88q2lni0hxz-python3.12-azure-multiapi-storage-1.3.0' '/nix/store/ka3g53q3f51bnvjj2cw9ddwkwvjpkz9s-python3.12-azure-storage-common-2.1.0' '/nix/store/nz5c19bx5vy8icadgjwf29k7vn37flb6-python3.12-azure-synapse-accesscontrol-0.7.0' '/nix/store/3ilhgn8dqbmkjmgmr2ihkrshcnwy8yg8-python3.12-azure-synapse-artifacts-0.19.0' '/nix/store/biiq5hmlhmyl55g2xnhvq9d5k5wsvdpx-python3.12-azure-synapse-managedprivateendpoints-0.4.0' '/nix/store/c1g7h4q4pcgfhgy1la75qsl09pyi8nf0-python3.12-azure-synapse-spark-0.7.0' '/nix/store/lnpjnir33vbf5bw1ld88qixclbc6zdxf-python3.12-chardet-5.2.0' '/nix/store/86c9042239j9hfh7dapm8ljdnvqb3fjf-python3.12-fabric-3.2.2' '/nix/store/v5w53qzjxw80j1804i9pyc34s3ibbcsw-python3.12-invoke-2.2.0' '/nix/store/627hzfhckvl1v3d190zz9d74zsnvdiw7-python3.12-decorator-5.1.1' '/nix/store/jnqzq7k4zavyjidyj5zks0bs8c5lbzdr-python3.12-javaproperties-0.8.1' '/nix/store/pg743fpc57d5cjj16xbmfn8g8r1yszik-python3.12-jsondiff-2.0.0' '/nix/store/jr07klhr9r4zzil0njw42xvxnjg0q7v9-python3.12-pycomposefile-0.0.31' '/nix/store/9mjxm42qm2841a3k1q5bllqnm6z69mhh-python3.12-pygithub-2.4.0' '/nix/store/1k63m5lf45xv0mh4is7xnvrbkpq9223h-python3.12-scp-0.15.0' '/nix/store/sh22gl9ylbdpf7bcxbh5sb71ygn3iinr-python3.12-semver-3.0.2' '/nix/store/ngjcgrbr270qb0c9i1qxysz811bldrck-python3.12-sshtunnel-0.4.0' '/nix/store/1bgrpq2kpsngln26bwnz35mk9kf6l26g-python3.12-websocket-client-1.8.0' '/nix/store/yzib5zhyrp79js86cpy648khxf1vnizj-python3.12-python-socks-2.4.4' '/nix/store/9l5fvlg1495842ajijwcx3qx09kr6mys-python3.12-trio-0.25.0' '/nix/store/9i4n07clbj50d1wky79i5wq0dyvkhd0c-python3.12-outcome-1.3.0.post0' '/nix/store/0awc9c3m3q3cfg0g1yjy46ylg7rnc30r-python3.12-sniffio-1.3.1' '/nix/store/p7x4jfm5gkgprrrfj098v4r596c1mbqk-python3.12-sortedcontainers-2.4.0' '/nix/store/h17rzg57kxp3kj145r8dp87dbc3vl004-python3.12-curio-1.6' '/nix/store/jz0p9lcnzn43mr24jyyww61iw5cjydrj-python3.12-xmltodict-0.13.0' '/nix/store/l7idy2qiiv0v0b6khfjvz3l5k6mnm47l-python3.12-setuptools-72.1.0' '/nix/store/vnz5ppyr98g1yfixhnbrk31rbq65jdgs-azure-functions-core-tools-4.0.5455' '/nix/store/fyjxsgaygmizg6hh7rv5k6ldkvgrx7x5-bicep-0.29.47' '/nix/store/dzd6g1ww6wgpslp1wf6h2xi95l3ghhd8-terraform-1.9.6' '/nix/store/6q8n07g9fwhwzcsi4ch8vb8p9j342zq2-bash-language-server-5.4.0' '/nix/store/zfcs674bivjj6daayni8m9bcp4859rjh-terraform-ls-0.34.3' '/nix/store/0hk8xmshd0c6cmnp8wz4wn9w01jl0gmh-terraform-lsp-0.0.12' '/nix/store/lvrml52cyhvz8r42vrvb051flf18srp2-basedpyright-1.17.5' '/nix/store/k97fic16vmpf9z6vjx5dgd6rxcvv5wwh-patchelf-0.15.0' '/nix/store/9l3havpzc3w1xggd19l5c395az4yh449-update-autotools-gnu-config-scripts-hook' '/nix/store/h9lc1dpi14z7is86ffhl3ld569138595-audit-tmpdir.sh' '/nix/store/m54bmrhj6fqz8nds5zcj97w9s9bckc9v-compress-man-pages.sh' '/nix/store/wgrbkkaldkrlrni33ccvm3b6vbxzb656-make-symlinks-relative.sh' '/nix/store/5yzw0vhkyszf2d179m0qfkgxmp5wjjx4-move-docs.sh' '/nix/store/fyaryjvghbkpfnsyw97hb3lyb37s1pd6-move-lib64.sh' '/nix/store/kd4xwxjpjxi71jkm6ka0np72if9rm3y0-move-sbin.sh' '/nix/store/pag6l61paj1dc9sv15l7bm5c17xn5kyk-move-systemd-user-units.sh' '/nix/store/jivxp510zxakaaic7qkrb7v1dd2rdbw9-multiple-outputs.sh' '/nix/store/12lvf0c7xric9cny7slvf9cmhypl1p67-patch-shebangs.sh' '/nix/store/cickvswrvann041nqxb0rxilc46svw1n-prune-libtool-files.sh' '/nix/store/xyff06pkhki3qy1ls77w10s0v79c9il0-reproducible-builds.sh' '/nix/store/aazf105snicrlvyzzbdj85sx4179rpfp-set-source-date-epoch-to-latest.sh' '/nix/store/gps9qrh99j7g02840wv5x78ykmz30byp-strip.sh' '/nix/store/zznja5f8v3jafffyah1rk46vpfcn38dv-gcc-wrapper-13.3.0' '/nix/store/b74nxf0yn2dzha02mgdxyklaqjaijzqp-binutils-wrapper-2.42' )
declare -a pkgsBuildTarget=()
declare -a pkgsHostHost=()
declare -a pkgsHostTarget=('/nix/store/ynvrgsngg84fap3w1nkzkvam2s97j4lm-python3-3.11.12-env' )
declare -a pkgsTargetTarget=()
declare -a postFixupHooks=('_makeSymlinksRelativeInAllOutputs' '_multioutPropagateDev' )
declare -a postUnpackHooks=('_updateSourceDateEpochFromSourceRoot' )
declare -a preConfigureHooks=('_multioutConfig' )
preConfigurePhases=' updateAutotoolsGnuConfigScriptsPhase'
declare -a preFixupHooks=('_moveToShare' '_multioutDocs' '_multioutDevs' )
preferLocalBuild='1'
export preferLocalBuild
prefix='/home/hedonicadapter/Documents/temp/examensarbete/outputs/out'
declare -a propagatedBuildDepFiles=('propagated-build-build-deps' 'propagated-native-build-inputs' 'propagated-build-target-deps' )
propagatedBuildInputs=''
export propagatedBuildInputs
declare -a propagatedHostDepFiles=('propagated-host-host-deps' 'propagated-build-inputs' )
propagatedNativeBuildInputs=''
export propagatedNativeBuildInputs
declare -a propagatedTargetDepFiles=('propagated-target-target-deps' )
shell='/nix/store/izpf49b74i15pcr9708s3xdwyqs4jxwl-bash-5.2p32/bin/bash'
export shell
shellHook='PYTHON_BIN=/nix/store/ynvrgsngg84fap3w1nkzkvam2s97j4lm-python3-3.11.12-env/bin/python
[[ -d .venv ]] || $PYTHON_BIN -m venv .venv
source .venv/bin/activate
find . -name "requirements.txt" -exec .venv/bin/pip install -r {} \;
.venv/bin/python --version
'
export shellHook
stdenv='/nix/store/91d27rjqlhkzx7mhzxrir1jcr40nyc7p-stdenv-linux'
export stdenv
strictDeps=''
export strictDeps
system='x86_64-linux'
export system
declare -a unpackCmdHooks=('_defaultUnpack' )
_activatePkgs ()
{
 
    local hostOffset targetOffset;
    local pkg;
    for hostOffset in "${allPlatOffsets[@]}";
    do
        local pkgsVar="${pkgAccumVarVars[hostOffset + 1]}";
        for targetOffset in "${allPlatOffsets[@]}";
        do
            (( hostOffset <= targetOffset )) || continue;
            local pkgsRef="${pkgsVar}[$targetOffset - $hostOffset]";
            local pkgsSlice="${!pkgsRef}[@]";
            for pkg in ${!pkgsSlice+"${!pkgsSlice}"};
            do
                activatePackage "$pkg" "$hostOffset" "$targetOffset";
            done;
        done;
    done
}
_addRpathPrefix ()
{
 
    if [ "${NIX_NO_SELF_RPATH:-0}" != 1 ]; then
        export NIX_LDFLAGS="-rpath $1/lib ${NIX_LDFLAGS-}";
    fi
}
_addToEnv ()
{
 
    local depHostOffset depTargetOffset;
    local pkg;
    for depHostOffset in "${allPlatOffsets[@]}";
    do
        local hookVar="${pkgHookVarVars[depHostOffset + 1]}";
        local pkgsVar="${pkgAccumVarVars[depHostOffset + 1]}";
        for depTargetOffset in "${allPlatOffsets[@]}";
        do
            (( depHostOffset <= depTargetOffset )) || continue;
            local hookRef="${hookVar}[$depTargetOffset - $depHostOffset]";
            if [[ -z "${strictDeps-}" ]]; then
                local visitedPkgs="";
                for pkg in "${pkgsBuildBuild[@]}" "${pkgsBuildHost[@]}" "${pkgsBuildTarget[@]}" "${pkgsHostHost[@]}" "${pkgsHostTarget[@]}" "${pkgsTargetTarget[@]}";
                do
                    if [[ "$visitedPkgs" = *"$pkg"* ]]; then
                        continue;
                    fi;
                    runHook "${!hookRef}" "$pkg";
                    visitedPkgs+=" $pkg";
                done;
            else
                local pkgsRef="${pkgsVar}[$depTargetOffset - $depHostOffset]";
                local pkgsSlice="${!pkgsRef}[@]";
                for pkg in ${!pkgsSlice+"${!pkgsSlice}"};
                do
                    runHook "${!hookRef}" "$pkg";
                done;
            fi;
        done;
    done
}
_allFlags ()
{
 
    export system pname name version;
    while IFS='' read -r varName; do
        nixTalkativeLog "@${varName}@ -> ${!varName}";
        args+=("--subst-var" "$varName");
    done < <(awk 'BEGIN { for (v in ENVIRON) if (v ~ /^[a-z][a-zA-Z0-9_]*$/) print v }')
}
_assignFirst ()
{
 
    local varName="$1";
    local _var;
    local REMOVE=REMOVE;
    shift;
    for _var in "$@";
    do
        if [ -n "${!_var-}" ]; then
            eval "${varName}"="${_var}";
            return;
        fi;
    done;
    echo;
    echo "error: _assignFirst: could not find a non-empty variable whose name to assign to ${varName}.";
    echo "       The following variables were all unset or empty:";
    echo "           $*";
    if [ -z "${out:-}" ]; then
        echo '       If you do not want an "out" output in your derivation, make sure to define';
        echo '       the other specific required outputs. This can be achieved by picking one';
        echo "       of the above as an output.";
        echo '       You do not have to remove "out" if you want to have a different default';
        echo '       output, because the first output is taken as a default.';
        echo;
    fi;
    return 1
}
_callImplicitHook ()
{
 
    local def="$1";
    local hookName="$2";
    if declare -F "$hookName" > /dev/null; then
        nixTalkativeLog "calling implicit '$hookName' function hook";
        "$hookName";
    else
        if type -p "$hookName" > /dev/null; then
            nixTalkativeLog "sourcing implicit '$hookName' script hook";
            source "$hookName";
        else
            if [ -n "${!hookName:-}" ]; then
                nixTalkativeLog "evaling implicit '$hookName' string hook";
                eval "${!hookName}";
            else
                return "$def";
            fi;
        fi;
    fi
}
_defaultUnpack ()
{
 
    local fn="$1";
    local destination;
    if [ -d "$fn" ]; then
        destination="$(stripHash "$fn")";
        if [ -e "$destination" ]; then
            echo "Cannot copy $fn to $destination: destination already exists!";
            echo "Did you specify two \"srcs\" with the same \"name\"?";
            return 1;
        fi;
        cp -pr --reflink=auto -- "$fn" "$destination";
    else
        case "$fn" in 
            *.tar.xz | *.tar.lzma | *.txz)
                ( XZ_OPT="--threads=$NIX_BUILD_CORES" xz -d < "$fn";
                true ) | tar xf - --mode=+w --warning=no-timestamp
            ;;
            *.tar | *.tar.* | *.tgz | *.tbz2 | *.tbz)
                tar xf "$fn" --mode=+w --warning=no-timestamp
            ;;
            *)
                return 1
            ;;
        esac;
    fi
}
_doStrip ()
{
 
    local -ra flags=(dontStripHost dontStripTarget);
    local -ra debugDirs=(stripDebugList stripDebugListTarget);
    local -ra allDirs=(stripAllList stripAllListTarget);
    local -ra stripCmds=(STRIP STRIP_FOR_TARGET);
    local -ra ranlibCmds=(RANLIB RANLIB_FOR_TARGET);
    stripDebugList=${stripDebugList[*]:-lib lib32 lib64 libexec bin sbin};
    stripDebugListTarget=${stripDebugListTarget[*]:-};
    stripAllList=${stripAllList[*]:-};
    stripAllListTarget=${stripAllListTarget[*]:-};
    local i;
    for i in ${!stripCmds[@]};
    do
        local -n flag="${flags[$i]}";
        local -n debugDirList="${debugDirs[$i]}";
        local -n allDirList="${allDirs[$i]}";
        local -n stripCmd="${stripCmds[$i]}";
        local -n ranlibCmd="${ranlibCmds[$i]}";
        if [[ -n "${dontStrip-}" || -n "${flag-}" ]] || ! type -f "${stripCmd-}" 2> /dev/null 1>&2; then
            continue;
        fi;
        stripDirs "$stripCmd" "$ranlibCmd" "$debugDirList" "${stripDebugFlags[*]:--S -p}";
        stripDirs "$stripCmd" "$ranlibCmd" "$allDirList" "${stripAllFlags[*]:--s -p}";
    done
}
_eval ()
{
 
    if declare -F "$1" > /dev/null 2>&1; then
        "$@";
    else
        eval "$1";
    fi
}
_logHook ()
{
 
    if [[ -z ${NIX_LOG_FD-} ]]; then
        return;
    fi;
    local hookKind="$1";
    local hookExpr="$2";
    shift 2;
    if declare -F "$hookExpr" > /dev/null 2>&1; then
        nixTalkativeLog "calling '$hookKind' function hook '$hookExpr'" "$@";
    else
        if type -p "$hookExpr" > /dev/null; then
            nixTalkativeLog "sourcing '$hookKind' script hook '$hookExpr'";
        else
            if [[ "$hookExpr" != "_callImplicitHook"* ]]; then
                local exprToOutput;
                if [[ ${NIX_DEBUG:-0} -ge 5 ]]; then
                    exprToOutput="$hookExpr";
                else
                    local hookExprLine;
                    while IFS= read -r hookExprLine; do
                        hookExprLine="${hookExprLine#"${hookExprLine%%[![:space:]]*}"}";
                        if [[ -n "$hookExprLine" ]]; then
                            exprToOutput+="$hookExprLine\\n ";
                        fi;
                    done <<< "$hookExpr";
                    exprToOutput="${exprToOutput%%\\n }";
                fi;
                nixTalkativeLog "evaling '$hookKind' string hook '$exprToOutput'";
            fi;
        fi;
    fi
}
_makeSymlinksRelative ()
{
 
    local symlinkTarget;
    if [ "${dontRewriteSymlinks-}" ] || [ ! -e "$prefix" ]; then
        return;
    fi;
    while IFS= read -r -d '' f; do
        symlinkTarget=$(readlink "$f");
        if [[ "$symlinkTarget"/ != "$prefix"/* ]]; then
            continue;
        fi;
        if [ ! -e "$symlinkTarget" ]; then
            echo "the symlink $f is broken, it points to $symlinkTarget (which is missing)";
        fi;
        echo "rewriting symlink $f to be relative to $prefix";
        ln -snrf "$symlinkTarget" "$f";
    done < <(find $prefix -type l -print0)
}
_makeSymlinksRelativeInAllOutputs ()
{
 
    local output;
    for output in $(getAllOutputNames);
    do
        prefix="${!output}" _makeSymlinksRelative;
    done
}
_moveLib64 ()
{
 
    if [ "${dontMoveLib64-}" = 1 ]; then
        return;
    fi;
    if [ ! -e "$prefix/lib64" -o -L "$prefix/lib64" ]; then
        return;
    fi;
    echo "moving $prefix/lib64/* to $prefix/lib";
    mkdir -p $prefix/lib;
    shopt -s dotglob;
    for i in $prefix/lib64/*;
    do
        mv --no-clobber "$i" $prefix/lib;
    done;
    shopt -u dotglob;
    rmdir $prefix/lib64;
    ln -s lib $prefix/lib64
}
_moveSbin ()
{
 
    if [ "${dontMoveSbin-}" = 1 ]; then
        return;
    fi;
    if [ ! -e "$prefix/sbin" -o -L "$prefix/sbin" ]; then
        return;
    fi;
    echo "moving $prefix/sbin/* to $prefix/bin";
    mkdir -p $prefix/bin;
    shopt -s dotglob;
    for i in $prefix/sbin/*;
    do
        mv "$i" $prefix/bin;
    done;
    shopt -u dotglob;
    rmdir $prefix/sbin;
    ln -s bin $prefix/sbin
}
_moveSystemdUserUnits ()
{
 
    if [ "${dontMoveSystemdUserUnits:-0}" = 1 ]; then
        return;
    fi;
    if [ ! -e "${prefix:?}/lib/systemd/user" ]; then
        return;
    fi;
    local source="$prefix/lib/systemd/user";
    local target="$prefix/share/systemd/user";
    echo "moving $source/* to $target";
    mkdir -p "$target";
    ( shopt -s dotglob;
    for i in "$source"/*;
    do
        mv "$i" "$target";
    done );
    rmdir "$source";
    ln -s "$target" "$source"
}
_moveToShare ()
{
 
    if [ -n "$__structuredAttrs" ]; then
        if [ -z "${forceShare-}" ]; then
            forceShare=(man doc info);
        fi;
    else
        forceShare=(${forceShare:-man doc info});
    fi;
    if [[ -z "$out" ]]; then
        return;
    fi;
    for d in "${forceShare[@]}";
    do
        if [ -d "$out/$d" ]; then
            if [ -d "$out/share/$d" ]; then
                echo "both $d/ and share/$d/ exist!";
            else
                echo "moving $out/$d to $out/share/$d";
                mkdir -p $out/share;
                mv $out/$d $out/share/;
            fi;
        fi;
    done
}
_multioutConfig ()
{
 
    if [ "$(getAllOutputNames)" = "out" ] || [ -z "${setOutputFlags-1}" ]; then
        return;
    fi;
    if [ -z "${shareDocName:-}" ]; then
        local confScript="${configureScript:-}";
        if [ -z "$confScript" ] && [ -x ./configure ]; then
            confScript=./configure;
        fi;
        if [ -f "$confScript" ]; then
            local shareDocName="$(sed -n "s/^PACKAGE_TARNAME='\(.*\)'$/\1/p" < "$confScript")";
        fi;
        if [ -z "$shareDocName" ] || echo "$shareDocName" | grep -q '[^a-zA-Z0-9_-]'; then
            shareDocName="$(echo "$name" | sed 's/-[^a-zA-Z].*//')";
        fi;
    fi;
    prependToVar configureFlags --bindir="${!outputBin}"/bin --sbindir="${!outputBin}"/sbin --includedir="${!outputInclude}"/include --oldincludedir="${!outputInclude}"/include --mandir="${!outputMan}"/share/man --infodir="${!outputInfo}"/share/info --docdir="${!outputDoc}"/share/doc/"${shareDocName}" --libdir="${!outputLib}"/lib --libexecdir="${!outputLib}"/libexec --localedir="${!outputLib}"/share/locale;
    prependToVar installFlags pkgconfigdir="${!outputDev}"/lib/pkgconfig m4datadir="${!outputDev}"/share/aclocal aclocaldir="${!outputDev}"/share/aclocal
}
_multioutDevs ()
{
 
    if [ "$(getAllOutputNames)" = "out" ] || [ -z "${moveToDev-1}" ]; then
        return;
    fi;
    moveToOutput include "${!outputInclude}";
    moveToOutput lib/pkgconfig "${!outputDev}";
    moveToOutput share/pkgconfig "${!outputDev}";
    moveToOutput lib/cmake "${!outputDev}";
    moveToOutput share/aclocal "${!outputDev}";
    for f in "${!outputDev}"/{lib,share}/pkgconfig/*.pc;
    do
        echo "Patching '$f' includedir to output ${!outputInclude}";
        sed -i "/^includedir=/s,=\${prefix},=${!outputInclude}," "$f";
    done
}
_multioutDocs ()
{
 
    local REMOVE=REMOVE;
    moveToOutput share/info "${!outputInfo}";
    moveToOutput share/doc "${!outputDoc}";
    moveToOutput share/gtk-doc "${!outputDevdoc}";
    moveToOutput share/devhelp/books "${!outputDevdoc}";
    moveToOutput share/man "${!outputMan}";
    moveToOutput share/man/man3 "${!outputDevman}"
}
_multioutPropagateDev ()
{
 
    if [ "$(getAllOutputNames)" = "out" ]; then
        return;
    fi;
    local outputFirst;
    for outputFirst in $(getAllOutputNames);
    do
        break;
    done;
    local propagaterOutput="$outputDev";
    if [ -z "$propagaterOutput" ]; then
        propagaterOutput="$outputFirst";
    fi;
    if [ -z "${propagatedBuildOutputs+1}" ]; then
        local po_dirty="$outputBin $outputInclude $outputLib";
        set +o pipefail;
        propagatedBuildOutputs=`echo "$po_dirty"             | tr -s ' ' '\n' | grep -v -F "$propagaterOutput"             | sort -u | tr '\n' ' ' `;
        set -o pipefail;
    fi;
    if [ -z "$propagatedBuildOutputs" ]; then
        return;
    fi;
    mkdir -p "${!propagaterOutput}"/nix-support;
    for output in $propagatedBuildOutputs;
    do
        echo -n " ${!output}" >> "${!propagaterOutput}"/nix-support/propagated-build-inputs;
    done
}
_overrideFirst ()
{
 
    if [ -z "${!1-}" ]; then
        _assignFirst "$@";
    fi
}
_pruneLibtoolFiles ()
{
 
    if [ "${dontPruneLibtoolFiles-}" ] || [ ! -e "$prefix" ]; then
        return;
    fi;
    find "$prefix" -type f -name '*.la' -exec grep -q '^# Generated by .*libtool' {} \; -exec grep -q "^old_library=''" {} \; -exec sed -i {} -e "/^dependency_libs='[^']/ c dependency_libs='' #pruned" \;
}
_updateSourceDateEpochFromSourceRoot ()
{
 
    if [ -n "$sourceRoot" ]; then
        updateSourceDateEpoch "$sourceRoot";
    fi
}
activatePackage ()
{
 
    local pkg="$1";
    local -r hostOffset="$2";
    local -r targetOffset="$3";
    (( hostOffset <= targetOffset )) || exit 1;
    if [ -f "$pkg" ]; then
        nixTalkativeLog "sourcing setup hook '$pkg'";
        source "$pkg";
    fi;
    if [[ -z "${strictDeps-}" || "$hostOffset" -le -1 ]]; then
        addToSearchPath _PATH "$pkg/bin";
    fi;
    if (( hostOffset <= -1 )); then
        addToSearchPath _XDG_DATA_DIRS "$pkg/share";
    fi;
    if [[ "$hostOffset" -eq 0 && -d "$pkg/bin" ]]; then
        addToSearchPath _HOST_PATH "$pkg/bin";
    fi;
    if [[ -f "$pkg/nix-support/setup-hook" ]]; then
        nixTalkativeLog "sourcing setup hook '$pkg/nix-support/setup-hook'";
        source "$pkg/nix-support/setup-hook";
    fi
}
addEnvHooks ()
{
 
    local depHostOffset="$1";
    shift;
    local pkgHookVarsSlice="${pkgHookVarVars[$depHostOffset + 1]}[@]";
    local pkgHookVar;
    for pkgHookVar in "${!pkgHookVarsSlice}";
    do
        eval "${pkgHookVar}s"'+=("$@")';
    done
}
addPythonPath ()
{
 
    addToSearchPathWithCustomDelimiter : PYTHONPATH $1/lib/python3.12/site-packages
}
addToSearchPath ()
{
 
    addToSearchPathWithCustomDelimiter ":" "$@"
}
addToSearchPathWithCustomDelimiter ()
{
 
    local delimiter="$1";
    local varName="$2";
    local dir="$3";
    if [[ -d "$dir" && "${!varName:+${delimiter}${!varName}${delimiter}}" != *"${delimiter}${dir}${delimiter}"* ]]; then
        export "${varName}=${!varName:+${!varName}${delimiter}}${dir}";
    fi
}
appendToVar ()
{
 
    local -n nameref="$1";
    local useArray type;
    if [ -n "$__structuredAttrs" ]; then
        useArray=true;
    else
        useArray=false;
    fi;
    if type=$(declare -p "$1" 2> /dev/null); then
        case "${type#* }" in 
            -A*)
                echo "appendToVar(): ERROR: trying to use appendToVar on an associative array, use variable+=([\"X\"]=\"Y\") instead." 1>&2;
                return 1
            ;;
            -a*)
                useArray=true
            ;;
            *)
                useArray=false
            ;;
        esac;
    fi;
    shift;
    if $useArray; then
        nameref=(${nameref+"${nameref[@]}"} "$@");
    else
        nameref="${nameref-} $*";
    fi
}
auditTmpdir ()
{
 
    local dir="$1";
    [ -e "$dir" ] || return 0;
    echo "checking for references to $TMPDIR/ in $dir...";
    local i;
    find "$dir" -type f -print0 | while IFS= read -r -d '' i; do
        if [[ "$i" =~ .build-id ]]; then
            continue;
        fi;
        if isELF "$i"; then
            if { 
                printf :;
                patchelf --print-rpath "$i"
            } | grep -q -F ":$TMPDIR/"; then
                echo "RPATH of binary $i contains a forbidden reference to $TMPDIR/";
                exit 1;
            fi;
        fi;
        if isScript "$i"; then
            if [ -e "$(dirname "$i")/.$(basename "$i")-wrapped" ]; then
                if grep -q -F "$TMPDIR/" "$i"; then
                    echo "wrapper script $i contains a forbidden reference to $TMPDIR/";
                    exit 1;
                fi;
            fi;
        fi;
    done
}
bintoolsWrapper_addLDVars ()
{
 
    local role_post;
    getHostRoleEnvHook;
    if [[ -d "$1/lib64" && ! -L "$1/lib64" ]]; then
        export NIX_LDFLAGS${role_post}+=" -L$1/lib64";
    fi;
    if [[ -d "$1/lib" ]]; then
        local -a glob=($1/lib/lib*);
        if [ "${#glob[*]}" -gt 0 ]; then
            export NIX_LDFLAGS${role_post}+=" -L$1/lib";
        fi;
    fi
}
buildPhase ()
{
 
    runHook preBuild;
    if [[ -z "${makeFlags-}" && -z "${makefile:-}" && ! ( -e Makefile || -e makefile || -e GNUmakefile ) ]]; then
        echo "no Makefile or custom buildPhase, doing nothing";
    else
        foundMakefile=1;
        local flagsArray=(${enableParallelBuilding:+-j${NIX_BUILD_CORES}} SHELL="$SHELL");
        concatTo flagsArray makeFlags makeFlagsArray buildFlags buildFlagsArray;
        echoCmd 'build flags' "${flagsArray[@]}";
        make ${makefile:+-f $makefile} "${flagsArray[@]}";
        unset flagsArray;
    fi;
    runHook postBuild
}
ccWrapper_addCVars ()
{
 
    local role_post;
    getHostRoleEnvHook;
    if [ -d "$1/include" ]; then
        export NIX_CFLAGS_COMPILE${role_post}+=" -isystem $1/include";
    fi;
    if [ -d "$1/Library/Frameworks" ]; then
        export NIX_CFLAGS_COMPILE${role_post}+=" -iframework $1/Library/Frameworks";
    fi
}
checkPhase ()
{
 
    runHook preCheck;
    if [[ -z "${foundMakefile:-}" ]]; then
        echo "no Makefile or custom checkPhase, doing nothing";
        runHook postCheck;
        return;
    fi;
    if [[ -z "${checkTarget:-}" ]]; then
        if make -n ${makefile:+-f $makefile} check > /dev/null 2>&1; then
            checkTarget="check";
        else
            if make -n ${makefile:+-f $makefile} test > /dev/null 2>&1; then
                checkTarget="test";
            fi;
        fi;
    fi;
    if [[ -z "${checkTarget:-}" ]]; then
        echo "no check/test target in ${makefile:-Makefile}, doing nothing";
    else
        local flagsArray=(${enableParallelChecking:+-j${NIX_BUILD_CORES}} SHELL="$SHELL");
        concatTo flagsArray makeFlags makeFlagsArray checkFlags=VERBOSE=y checkFlagsArray checkTarget;
        echoCmd 'check flags' "${flagsArray[@]}";
        make ${makefile:+-f $makefile} "${flagsArray[@]}";
        unset flagsArray;
    fi;
    runHook postCheck
}
compressManPages ()
{
 
    local dir="$1";
    if [ -L "$dir"/share ] || [ -L "$dir"/share/man ] || [ ! -d "$dir/share/man" ]; then
        return;
    fi;
    echo "gzipping man pages under $dir/share/man/";
    find "$dir"/share/man/ -type f -a '!' -regex '.*\.\(bz2\|gz\|xz\)$' -print0 | while IFS= read -r -d '' f; do
        if gzip -c -n "$f" > "$f".gz; then
            rm "$f";
        else
            rm "$f".gz;
        fi;
    done;
    find "$dir"/share/man/ -type l -a '!' -regex '.*\.\(bz2\|gz\|xz\)$' -print0 | sort -z | while IFS= read -r -d '' f; do
        local target;
        target="$(readlink -f "$f")";
        if [ -f "$target".gz ]; then
            ln -sf "$target".gz "$f".gz && rm "$f";
        fi;
    done
}
concatStringsSep ()
{
 
    local sep="$1";
    local name="$2";
    local type oldifs;
    if type=$(declare -p "$name" 2> /dev/null); then
        local -n nameref="$name";
        case "${type#* }" in 
            -A*)
                echo "concatStringsSep(): ERROR: trying to use concatStringsSep on an associative array." 1>&2;
                return 1
            ;;
            -a*)
                local IFS="$sep";
                echo -n "${nameref[*]}"
            ;;
            *)
                echo -n "${nameref// /"${sep}"}"
            ;;
        esac;
    fi
}
concatTo ()
{
 
    local -n targetref="$1";
    shift;
    local arg default name type;
    for arg in "$@";
    do
        IFS="=" read -r name default <<< "$arg";
        local -n nameref="$name";
        if [[ ! -n "${nameref[@]}" && -n "$default" ]]; then
            targetref+=("$default");
        else
            if type=$(declare -p "$name" 2> /dev/null); then
                case "${type#* }" in 
                    -A*)
                        echo "concatTo(): ERROR: trying to use concatTo on an associative array." 1>&2;
                        return 1
                    ;;
                    -a*)
                        targetref+=("${nameref[@]}")
                    ;;
                    *)
                        if [[ "$name" = *"Array" ]]; then
                            nixErrorLog "concatTo(): $name is not declared as array, treating as a singleton. This will become an error in future";
                            targetref+=(${nameref+"${nameref[@]}"});
                        else
                            targetref+=(${nameref-});
                        fi
                    ;;
                esac;
            fi;
        fi;
    done
}
configurePhase ()
{
 
    runHook preConfigure;
    : "${configureScript=}";
    if [[ -z "$configureScript" && -x ./configure ]]; then
        configureScript=./configure;
    fi;
    if [ -z "${dontFixLibtool:-}" ]; then
        export lt_cv_deplibs_check_method="${lt_cv_deplibs_check_method-pass_all}";
        local i;
        find . -iname "ltmain.sh" -print0 | while IFS='' read -r -d '' i; do
            echo "fixing libtool script $i";
            fixLibtool "$i";
        done;
        CONFIGURE_MTIME_REFERENCE=$(mktemp configure.mtime.reference.XXXXXX);
        find . -executable -type f -name configure -exec grep -l 'GNU Libtool is free software; you can redistribute it and/or modify' {} \; -exec touch -r {} "$CONFIGURE_MTIME_REFERENCE" \; -exec sed -i s_/usr/bin/file_file_g {} \; -exec touch -r "$CONFIGURE_MTIME_REFERENCE" {} \;;
        rm -f "$CONFIGURE_MTIME_REFERENCE";
    fi;
    if [[ -z "${dontAddPrefix:-}" && -n "$prefix" ]]; then
        prependToVar configureFlags "${prefixKey:---prefix=}$prefix";
    fi;
    if [[ -f "$configureScript" ]]; then
        if [ -z "${dontAddDisableDepTrack:-}" ]; then
            if grep -q dependency-tracking "$configureScript"; then
                prependToVar configureFlags --disable-dependency-tracking;
            fi;
        fi;
        if [ -z "${dontDisableStatic:-}" ]; then
            if grep -q enable-static "$configureScript"; then
                prependToVar configureFlags --disable-static;
            fi;
        fi;
        if [ -z "${dontPatchShebangsInConfigure:-}" ]; then
            patchShebangs --build "$configureScript";
        fi;
    fi;
    if [ -n "$configureScript" ]; then
        local -a flagsArray;
        concatTo flagsArray configureFlags configureFlagsArray;
        echoCmd 'configure flags' "${flagsArray[@]}";
        $configureScript "${flagsArray[@]}";
        unset flagsArray;
    else
        echo "no configure script, doing nothing";
    fi;
    runHook postConfigure
}
consumeEntire ()
{
 
    if IFS='' read -r -d '' "$1"; then
        echo "consumeEntire(): ERROR: Input null bytes, won't process" 1>&2;
        return 1;
    fi
}
distPhase ()
{
 
    runHook preDist;
    local flagsArray=();
    concatTo flagsArray distFlags distFlagsArray distTarget=dist;
    echo 'dist flags: %q' "${flagsArray[@]}";
    make ${makefile:+-f $makefile} "${flagsArray[@]}";
    if [ "${dontCopyDist:-0}" != 1 ]; then
        mkdir -p "$out/tarballs";
        cp -pvd ${tarballs[*]:-*.tar.gz} "$out/tarballs";
    fi;
    runHook postDist
}
dumpVars ()
{
 
    if [ "${noDumpEnvVars:-0}" != 1 ]; then
        { 
            install -m 0600 /dev/null "$NIX_BUILD_TOP/env-vars" && export 2> /dev/null >| "$NIX_BUILD_TOP/env-vars"
        } || true;
    fi
}
echoCmd ()
{
 
    printf "%s:" "$1";
    shift;
    printf ' %q' "$@";
    echo
}
exitHandler ()
{
 
    exitCode="$?";
    set +e;
    if [ -n "${showBuildStats:-}" ]; then
        read -r -d '' -a buildTimes < <(times);
        echo "build times:";
        echo "user time for the shell             ${buildTimes[0]}";
        echo "system time for the shell           ${buildTimes[1]}";
        echo "user time for all child processes   ${buildTimes[2]}";
        echo "system time for all child processes ${buildTimes[3]}";
    fi;
    if (( "$exitCode" != 0 )); then
        runHook failureHook;
        if [ -n "${succeedOnFailure:-}" ]; then
            echo "build failed with exit code $exitCode (ignored)";
            mkdir -p "$out/nix-support";
            printf "%s" "$exitCode" > "$out/nix-support/failed";
            exit 0;
        fi;
    else
        runHook exitHook;
    fi;
    return "$exitCode"
}
findInputs ()
{
 
    local -r pkg="$1";
    local -r hostOffset="$2";
    local -r targetOffset="$3";
    (( hostOffset <= targetOffset )) || exit 1;
    local varVar="${pkgAccumVarVars[hostOffset + 1]}";
    local varRef="$varVar[$((targetOffset - hostOffset))]";
    local var="${!varRef}";
    unset -v varVar varRef;
    local varSlice="$var[*]";
    case "${!varSlice-}" in 
        *" $pkg "*)
            return 0
        ;;
    esac;
    unset -v varSlice;
    eval "$var"'+=("$pkg")';
    if ! [ -e "$pkg" ]; then
        echo "build input $pkg does not exist" 1>&2;
        exit 1;
    fi;
    function mapOffset () 
    { 
        local -r inputOffset="$1";
        local -n outputOffset="$2";
        if (( inputOffset <= 0 )); then
            outputOffset=$((inputOffset + hostOffset));
        else
            outputOffset=$((inputOffset - 1 + targetOffset));
        fi
    };
    local relHostOffset;
    for relHostOffset in "${allPlatOffsets[@]}";
    do
        local files="${propagatedDepFilesVars[relHostOffset + 1]}";
        local hostOffsetNext;
        mapOffset "$relHostOffset" hostOffsetNext;
        (( -1 <= hostOffsetNext && hostOffsetNext <= 1 )) || continue;
        local relTargetOffset;
        for relTargetOffset in "${allPlatOffsets[@]}";
        do
            (( "$relHostOffset" <= "$relTargetOffset" )) || continue;
            local fileRef="${files}[$relTargetOffset - $relHostOffset]";
            local file="${!fileRef}";
            unset -v fileRef;
            local targetOffsetNext;
            mapOffset "$relTargetOffset" targetOffsetNext;
            (( -1 <= hostOffsetNext && hostOffsetNext <= 1 )) || continue;
            [[ -f "$pkg/nix-support/$file" ]] || continue;
            local pkgNext;
            read -r -d '' pkgNext < "$pkg/nix-support/$file" || true;
            for pkgNext in $pkgNext;
            do
                findInputs "$pkgNext" "$hostOffsetNext" "$targetOffsetNext";
            done;
        done;
    done
}
fixLibtool ()
{
 
    local search_path;
    for flag in $NIX_LDFLAGS;
    do
        case $flag in 
            -L*)
                search_path+=" ${flag#-L}"
            ;;
        esac;
    done;
    sed -i "$1" -e "s^eval \(sys_lib_search_path=\).*^\1'${search_path:-}'^" -e 's^eval sys_lib_.+search_path=.*^^'
}
fixupPhase ()
{
 
    local output;
    for output in $(getAllOutputNames);
    do
        if [ -e "${!output}" ]; then
            chmod -R u+w,u-s,g-s "${!output}";
        fi;
    done;
    runHook preFixup;
    local output;
    for output in $(getAllOutputNames);
    do
        prefix="${!output}" runHook fixupOutput;
    done;
    recordPropagatedDependencies;
    if [ -n "${setupHook:-}" ]; then
        mkdir -p "${!outputDev}/nix-support";
        substituteAll "$setupHook" "${!outputDev}/nix-support/setup-hook";
    fi;
    if [ -n "${setupHooks:-}" ]; then
        mkdir -p "${!outputDev}/nix-support";
        local hook;
        for hook in ${setupHooks[@]};
        do
            local content;
            consumeEntire content < "$hook";
            substituteAllStream content "file '$hook'" >> "${!outputDev}/nix-support/setup-hook";
            unset -v content;
        done;
        unset -v hook;
    fi;
    if [ -n "${propagatedUserEnvPkgs:-}" ]; then
        mkdir -p "${!outputBin}/nix-support";
        printWords $propagatedUserEnvPkgs > "${!outputBin}/nix-support/propagated-user-env-packages";
    fi;
    runHook postFixup
}
genericBuild ()
{
 
    export GZIP_NO_TIMESTAMPS=1;
    if [ -f "${buildCommandPath:-}" ]; then
        source "$buildCommandPath";
        return;
    fi;
    if [ -n "${buildCommand:-}" ]; then
        eval "$buildCommand";
        return;
    fi;
    if [ -z "${phases[*]:-}" ]; then
        phases="${prePhases[*]:-} unpackPhase patchPhase ${preConfigurePhases[*]:-}             configurePhase ${preBuildPhases[*]:-} buildPhase checkPhase             ${preInstallPhases[*]:-} installPhase ${preFixupPhases[*]:-} fixupPhase installCheckPhase             ${preDistPhases[*]:-} distPhase ${postPhases[*]:-}";
    fi;
    for curPhase in ${phases[*]};
    do
        runPhase "$curPhase";
    done
}
getAllOutputNames ()
{
 
    if [ -n "$__structuredAttrs" ]; then
        echo "${!outputs[*]}";
    else
        echo "$outputs";
    fi
}
getHostRole ()
{
 
    getRole "$hostOffset"
}
getHostRoleEnvHook ()
{
 
    getRole "$depHostOffset"
}
getRole ()
{
 
    case $1 in 
        -1)
            role_post='_FOR_BUILD'
        ;;
        0)
            role_post=''
        ;;
        1)
            role_post='_FOR_TARGET'
        ;;
        *)
            echo "binutils-wrapper-2.42: used as improper sort of dependency" 1>&2;
            return 1
        ;;
    esac
}
getTargetRole ()
{
 
    getRole "$targetOffset"
}
getTargetRoleEnvHook ()
{
 
    getRole "$depTargetOffset"
}
getTargetRoleWrapper ()
{
 
    case $targetOffset in 
        -1)
            export NIX_BINTOOLS_WRAPPER_TARGET_BUILD_x86_64_unknown_linux_gnu=1
        ;;
        0)
            export NIX_BINTOOLS_WRAPPER_TARGET_HOST_x86_64_unknown_linux_gnu=1
        ;;
        1)
            export NIX_BINTOOLS_WRAPPER_TARGET_TARGET_x86_64_unknown_linux_gnu=1
        ;;
        *)
            echo "binutils-wrapper-2.42: used as improper sort of dependency" 1>&2;
            return 1
        ;;
    esac
}
installCheckPhase ()
{
 
    runHook preInstallCheck;
    if [[ -z "${foundMakefile:-}" ]]; then
        echo "no Makefile or custom installCheckPhase, doing nothing";
    else
        if [[ -z "${installCheckTarget:-}" ]] && ! make -n ${makefile:+-f $makefile} "${installCheckTarget:-installcheck}" > /dev/null 2>&1; then
            echo "no installcheck target in ${makefile:-Makefile}, doing nothing";
        else
            local flagsArray=(${enableParallelChecking:+-j${NIX_BUILD_CORES}} SHELL="$SHELL");
            concatTo flagsArray makeFlags makeFlagsArray installCheckFlags installCheckFlagsArray installCheckTarget=installcheck;
            echoCmd 'installcheck flags' "${flagsArray[@]}";
            make ${makefile:+-f $makefile} "${flagsArray[@]}";
            unset flagsArray;
        fi;
    fi;
    runHook postInstallCheck
}
installPhase ()
{
 
    runHook preInstall;
    if [[ -z "${makeFlags-}" && -z "${makefile:-}" && ! ( -e Makefile || -e makefile || -e GNUmakefile ) ]]; then
        echo "no Makefile or custom installPhase, doing nothing";
        runHook postInstall;
        return;
    else
        foundMakefile=1;
    fi;
    if [ -n "$prefix" ]; then
        mkdir -p "$prefix";
    fi;
    local flagsArray=(${enableParallelInstalling:+-j${NIX_BUILD_CORES}} SHELL="$SHELL");
    concatTo flagsArray makeFlags makeFlagsArray installFlags installFlagsArray installTargets=install;
    echoCmd 'install flags' "${flagsArray[@]}";
    make ${makefile:+-f $makefile} "${flagsArray[@]}";
    unset flagsArray;
    runHook postInstall
}
isELF ()
{
 
    local fn="$1";
    local fd;
    local magic;
    exec {fd}< "$fn";
    read -r -n 4 -u "$fd" magic;
    exec {fd}>&-;
    if [ "$magic" = 'ELF' ]; then
        return 0;
    else
        return 1;
    fi
}
isMachO ()
{
 
    local fn="$1";
    local fd;
    local magic;
    exec {fd}< "$fn";
    read -r -n 4 -u "$fd" magic;
    exec {fd}>&-;
    if [[ "$magic" = $(echo -ne "\xfe\xed\xfa\xcf") || "$magic" = $(echo -ne "\xcf\xfa\xed\xfe") ]]; then
        return 0;
    else
        if [[ "$magic" = $(echo -ne "\xfe\xed\xfa\xce") || "$magic" = $(echo -ne "\xce\xfa\xed\xfe") ]]; then
            return 0;
        else
            if [[ "$magic" = $(echo -ne "\xca\xfe\xba\xbe") || "$magic" = $(echo -ne "\xbe\xba\xfe\xca") ]]; then
                return 0;
            else
                return 1;
            fi;
        fi;
    fi
}
isScript ()
{
 
    local fn="$1";
    local fd;
    local magic;
    exec {fd}< "$fn";
    read -r -n 2 -u "$fd" magic;
    exec {fd}>&-;
    if [[ "$magic" =~ \#! ]]; then
        return 0;
    else
        return 1;
    fi
}
mapOffset ()
{
 
    local -r inputOffset="$1";
    local -n outputOffset="$2";
    if (( inputOffset <= 0 )); then
        outputOffset=$((inputOffset + hostOffset));
    else
        outputOffset=$((inputOffset - 1 + targetOffset));
    fi
}
moveToOutput ()
{
 
    local patt="$1";
    local dstOut="$2";
    local output;
    for output in $(getAllOutputNames);
    do
        if [ "${!output}" = "$dstOut" ]; then
            continue;
        fi;
        local srcPath;
        for srcPath in "${!output}"/$patt;
        do
            if [ ! -e "$srcPath" ] && [ ! -L "$srcPath" ]; then
                continue;
            fi;
            if [ "$dstOut" = REMOVE ]; then
                echo "Removing $srcPath";
                rm -r "$srcPath";
            else
                local dstPath="$dstOut${srcPath#${!output}}";
                echo "Moving $srcPath to $dstPath";
                if [ -d "$dstPath" ] && [ -d "$srcPath" ]; then
                    rmdir "$srcPath" --ignore-fail-on-non-empty;
                    if [ -d "$srcPath" ]; then
                        mv -t "$dstPath" "$srcPath"/*;
                        rmdir "$srcPath";
                    fi;
                else
                    mkdir -p "$(readlink -m "$dstPath/..")";
                    mv "$srcPath" "$dstPath";
                fi;
            fi;
            local srcParent="$(readlink -m "$srcPath/..")";
            if [ -n "$(find "$srcParent" -maxdepth 0 -type d -empty 2> /dev/null)" ]; then
                echo "Removing empty $srcParent/ and (possibly) its parents";
                rmdir -p --ignore-fail-on-non-empty "$srcParent" 2> /dev/null || true;
            fi;
        done;
    done
}
nixChattyLog ()
{
 
    if [[ -z ${NIX_LOG_FD-} ]] || [[ ${NIX_DEBUG:-0} -lt 5 ]]; then
        return;
    fi;
    printf "%s\n" "$*" >&"$NIX_LOG_FD"
}
nixDebugLog ()
{
 
    if [[ -z ${NIX_LOG_FD-} ]] || [[ ${NIX_DEBUG:-0} -lt 6 ]]; then
        return;
    fi;
    printf "%s\n" "$*" >&"$NIX_LOG_FD"
}
nixErrorLog ()
{
 
    if [[ -z ${NIX_LOG_FD-} ]] || [[ ${NIX_DEBUG:-0} -lt 0 ]]; then
        return;
    fi;
    printf "%s\n" "$*" >&"$NIX_LOG_FD"
}
nixInfoLog ()
{
 
    if [[ -z ${NIX_LOG_FD-} ]] || [[ ${NIX_DEBUG:-0} -lt 3 ]]; then
        return;
    fi;
    printf "%s\n" "$*" >&"$NIX_LOG_FD"
}
nixNoticeLog ()
{
 
    if [[ -z ${NIX_LOG_FD-} ]] || [[ ${NIX_DEBUG:-0} -lt 2 ]]; then
        return;
    fi;
    printf "%s\n" "$*" >&"$NIX_LOG_FD"
}
nixTalkativeLog ()
{
 
    if [[ -z ${NIX_LOG_FD-} ]] || [[ ${NIX_DEBUG:-0} -lt 4 ]]; then
        return;
    fi;
    printf "%s\n" "$*" >&"$NIX_LOG_FD"
}
nixVomitLog ()
{
 
    if [[ -z ${NIX_LOG_FD-} ]] || [[ ${NIX_DEBUG:-0} -lt 7 ]]; then
        return;
    fi;
    printf "%s\n" "$*" >&"$NIX_LOG_FD"
}
nixWarnLog ()
{
 
    if [[ -z ${NIX_LOG_FD-} ]] || [[ ${NIX_DEBUG:-0} -lt 1 ]]; then
        return;
    fi;
    printf "%s\n" "$*" >&"$NIX_LOG_FD"
}
patchELF ()
{
 
    local dir="$1";
    [ -e "$dir" ] || return 0;
    echo "shrinking RPATHs of ELF executables and libraries in $dir";
    local i;
    while IFS= read -r -d '' i; do
        if [[ "$i" =~ .build-id ]]; then
            continue;
        fi;
        if ! isELF "$i"; then
            continue;
        fi;
        echo "shrinking $i";
        patchelf --shrink-rpath "$i" || true;
    done < <(find "$dir" -type f -print0)
}
patchPhase ()
{
 
    runHook prePatch;
    local -a patchesArray;
    concatTo patchesArray patches;
    for i in "${patchesArray[@]}";
    do
        echo "applying patch $i";
        local uncompress=cat;
        case "$i" in 
            *.gz)
                uncompress="gzip -d"
            ;;
            *.bz2)
                uncompress="bzip2 -d"
            ;;
            *.xz)
                uncompress="xz -d"
            ;;
            *.lzma)
                uncompress="lzma -d"
            ;;
        esac;
        local -a flagsArray;
        concatTo flagsArray patchFlags=-p1;
        $uncompress < "$i" 2>&1 | patch "${flagsArray[@]}";
    done;
    runHook postPatch
}
patchShebangs ()
{
 
    local pathName;
    local update;
    while [[ $# -gt 0 ]]; do
        case "$1" in 
            --host)
                pathName=HOST_PATH;
                shift
            ;;
            --build)
                pathName=PATH;
                shift
            ;;
            --update)
                update=true;
                shift
            ;;
            --)
                shift;
                break
            ;;
            -* | --*)
                echo "Unknown option $1 supplied to patchShebangs" 1>&2;
                return 1
            ;;
            *)
                break
            ;;
        esac;
    done;
    echo "patching script interpreter paths in $@";
    local f;
    local oldPath;
    local newPath;
    local arg0;
    local args;
    local oldInterpreterLine;
    local newInterpreterLine;
    if [[ $# -eq 0 ]]; then
        echo "No arguments supplied to patchShebangs" 1>&2;
        return 0;
    fi;
    local f;
    while IFS= read -r -d '' f; do
        isScript "$f" || continue;
        read -r oldInterpreterLine < "$f" || [ "$oldInterpreterLine" ];
        read -r oldPath arg0 args <<< "${oldInterpreterLine:2}";
        if [[ -z "${pathName:-}" ]]; then
            if [[ -n $strictDeps && $f == "$NIX_STORE"* ]]; then
                pathName=HOST_PATH;
            else
                pathName=PATH;
            fi;
        fi;
        if [[ "$oldPath" == *"/bin/env" ]]; then
            if [[ $arg0 == "-S" ]]; then
                arg0=${args%% *};
                args=${args#* };
                newPath="$(PATH="${!pathName}" type -P "env" || true)";
                args="-S $(PATH="${!pathName}" type -P "$arg0" || true) $args";
            else
                if [[ $arg0 == "-"* || $arg0 == *"="* ]]; then
                    echo "$f: unsupported interpreter directive \"$oldInterpreterLine\" (set dontPatchShebangs=1 and handle shebang patching yourself)" 1>&2;
                    exit 1;
                else
                    newPath="$(PATH="${!pathName}" type -P "$arg0" || true)";
                fi;
            fi;
        else
            if [[ -z $oldPath ]]; then
                oldPath="/bin/sh";
            fi;
            newPath="$(PATH="${!pathName}" type -P "$(basename "$oldPath")" || true)";
            args="$arg0 $args";
        fi;
        newInterpreterLine="$newPath $args";
        newInterpreterLine=${newInterpreterLine%${newInterpreterLine##*[![:space:]]}};
        if [[ -n "$oldPath" && ( "$update" == true || "${oldPath:0:${#NIX_STORE}}" != "$NIX_STORE" ) ]]; then
            if [[ -n "$newPath" && "$newPath" != "$oldPath" ]]; then
                echo "$f: interpreter directive changed from \"$oldInterpreterLine\" to \"$newInterpreterLine\"";
                escapedInterpreterLine=${newInterpreterLine//\\/\\\\};
                timestamp=$(stat --printf "%y" "$f");
                sed -i -e "1 s|.*|#\!$escapedInterpreterLine|" "$f";
                touch --date "$timestamp" "$f";
            fi;
        fi;
    done < <(find "$@" -type f -perm -0100 -print0)
}
patchShebangsAuto ()
{
 
    if [[ -z "${dontPatchShebangs-}" && -e "$prefix" ]]; then
        if [[ "$output" != out && "$output" = "$outputDev" ]]; then
            patchShebangs --build "$prefix";
        else
            patchShebangs --host "$prefix";
        fi;
    fi
}
prependToVar ()
{
 
    local -n nameref="$1";
    local useArray type;
    if [ -n "$__structuredAttrs" ]; then
        useArray=true;
    else
        useArray=false;
    fi;
    if type=$(declare -p "$1" 2> /dev/null); then
        case "${type#* }" in 
            -A*)
                echo "prependToVar(): ERROR: trying to use prependToVar on an associative array." 1>&2;
                return 1
            ;;
            -a*)
                useArray=true
            ;;
            *)
                useArray=false
            ;;
        esac;
    fi;
    shift;
    if $useArray; then
        nameref=("$@" ${nameref+"${nameref[@]}"});
    else
        nameref="$* ${nameref-}";
    fi
}
printLines ()
{
 
    (( "$#" > 0 )) || return 0;
    printf '%s\n' "$@"
}
printWords ()
{
 
    (( "$#" > 0 )) || return 0;
    printf '%s ' "$@"
}
recordPropagatedDependencies ()
{
 
    declare -ra flatVars=(depsBuildBuildPropagated propagatedNativeBuildInputs depsBuildTargetPropagated depsHostHostPropagated propagatedBuildInputs depsTargetTargetPropagated);
    declare -ra flatFiles=("${propagatedBuildDepFiles[@]}" "${propagatedHostDepFiles[@]}" "${propagatedTargetDepFiles[@]}");
    local propagatedInputsIndex;
    for propagatedInputsIndex in "${!flatVars[@]}";
    do
        local propagatedInputsSlice="${flatVars[$propagatedInputsIndex]}[@]";
        local propagatedInputsFile="${flatFiles[$propagatedInputsIndex]}";
        [[ -n "${!propagatedInputsSlice}" ]] || continue;
        mkdir -p "${!outputDev}/nix-support";
        printWords ${!propagatedInputsSlice} > "${!outputDev}/nix-support/$propagatedInputsFile";
    done
}
runHook ()
{
 
    local hookName="$1";
    shift;
    local hooksSlice="${hookName%Hook}Hooks[@]";
    local hook;
    for hook in "_callImplicitHook 0 $hookName" ${!hooksSlice+"${!hooksSlice}"};
    do
        _logHook "$hookName" "$hook" "$@";
        _eval "$hook" "$@";
    done;
    return 0
}
runOneHook ()
{
 
    local hookName="$1";
    shift;
    local hooksSlice="${hookName%Hook}Hooks[@]";
    local hook ret=1;
    for hook in "_callImplicitHook 1 $hookName" ${!hooksSlice+"${!hooksSlice}"};
    do
        _logHook "$hookName" "$hook" "$@";
        if _eval "$hook" "$@"; then
            ret=0;
            break;
        fi;
    done;
    return "$ret"
}
runPhase ()
{
 
    local curPhase="$*";
    if [[ "$curPhase" = unpackPhase && -n "${dontUnpack:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = patchPhase && -n "${dontPatch:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = configurePhase && -n "${dontConfigure:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = buildPhase && -n "${dontBuild:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = checkPhase && -z "${doCheck:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = installPhase && -n "${dontInstall:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = fixupPhase && -n "${dontFixup:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = installCheckPhase && -z "${doInstallCheck:-}" ]]; then
        return;
    fi;
    if [[ "$curPhase" = distPhase && -z "${doDist:-}" ]]; then
        return;
    fi;
    showPhaseHeader "$curPhase";
    dumpVars;
    local startTime endTime;
    startTime=$(date +"%s");
    eval "${!curPhase:-$curPhase}";
    endTime=$(date +"%s");
    showPhaseFooter "$curPhase" "$startTime" "$endTime";
    if [ "$curPhase" = unpackPhase ]; then
        [ -n "${sourceRoot:-}" ] && chmod +x -- "${sourceRoot}";
        cd -- "${sourceRoot:-.}";
    fi
}
showPhaseFooter ()
{
 
    local phase="$1";
    local startTime="$2";
    local endTime="$3";
    local delta=$(( endTime - startTime ));
    (( delta < 30 )) && return;
    local H=$((delta/3600));
    local M=$((delta%3600/60));
    local S=$((delta%60));
    echo -n "$phase completed in ";
    (( H > 0 )) && echo -n "$H hours ";
    (( M > 0 )) && echo -n "$M minutes ";
    echo "$S seconds"
}
showPhaseHeader ()
{
 
    local phase="$1";
    echo "Running phase: $phase";
    if [[ -z ${NIX_LOG_FD-} ]]; then
        return;
    fi;
    printf "@nix { \"action\": \"setPhase\", \"phase\": \"%s\" }\n" "$phase" >&"$NIX_LOG_FD"
}
stripDirs ()
{
 
    local cmd="$1";
    local ranlibCmd="$2";
    local paths="$3";
    local stripFlags="$4";
    local excludeFlags=();
    local pathsNew=;
    [ -z "$cmd" ] && echo "stripDirs: Strip command is empty" 1>&2 && exit 1;
    [ -z "$ranlibCmd" ] && echo "stripDirs: Ranlib command is empty" 1>&2 && exit 1;
    local pattern;
    if [ -n "${stripExclude:-}" ]; then
        for pattern in "${stripExclude[@]}";
        do
            excludeFlags+=(-a '!' '(' -name "$pattern" -o -wholename "$prefix/$pattern" ')');
        done;
    fi;
    local p;
    for p in ${paths};
    do
        if [ -e "$prefix/$p" ]; then
            pathsNew="${pathsNew} $prefix/$p";
        fi;
    done;
    paths=${pathsNew};
    if [ -n "${paths}" ]; then
        echo "stripping (with command $cmd and flags $stripFlags) in $paths";
        local striperr;
        striperr="$(mktemp --tmpdir="$TMPDIR" 'striperr.XXXXXX')";
        find $paths -type f "${excludeFlags[@]}" -a '!' -path "$prefix/lib/debug/*" -printf '%D-%i,%p\0' | sort -t, -k1,1 -u -z | cut -d, -f2- -z | xargs -r -0 -n1 -P "$NIX_BUILD_CORES" -- $cmd $stripFlags 2> "$striperr" || exit_code=$?;
        [[ "$exit_code" = 123 || -z "$exit_code" ]] || ( cat "$striperr" 1>&2 && exit 1 );
        rm "$striperr";
        find $paths -name '*.a' -type f -exec $ranlibCmd '{}' \; 2> /dev/null;
    fi
}
stripHash ()
{
 
    local strippedName casematchOpt=0;
    strippedName="$(basename -- "$1")";
    shopt -q nocasematch && casematchOpt=1;
    shopt -u nocasematch;
    if [[ "$strippedName" =~ ^[a-z0-9]{32}- ]]; then
        echo "${strippedName:33}";
    else
        echo "$strippedName";
    fi;
    if (( casematchOpt )); then
        shopt -s nocasematch;
    fi
}
substitute ()
{
 
    local input="$1";
    local output="$2";
    shift 2;
    if [ ! -f "$input" ]; then
        echo "substitute(): ERROR: file '$input' does not exist" 1>&2;
        return 1;
    fi;
    local content;
    consumeEntire content < "$input";
    if [ -e "$output" ]; then
        chmod +w "$output";
    fi;
    substituteStream content "file '$input'" "$@" > "$output"
}
substituteAll ()
{
 
    local input="$1";
    local output="$2";
    local -a args=();
    _allFlags;
    substitute "$input" "$output" "${args[@]}"
}
substituteAllInPlace ()
{
 
    local fileName="$1";
    shift;
    substituteAll "$fileName" "$fileName" "$@"
}
substituteAllStream ()
{
 
    local -a args=();
    _allFlags;
    substituteStream "$1" "$2" "${args[@]}"
}
substituteInPlace ()
{
 
    local -a fileNames=();
    for arg in "$@";
    do
        if [[ "$arg" = "--"* ]]; then
            break;
        fi;
        fileNames+=("$arg");
        shift;
    done;
    for file in "${fileNames[@]}";
    do
        substitute "$file" "$file" "$@";
    done
}
substituteStream ()
{
 
    local var=$1;
    local description=$2;
    shift 2;
    while (( "$#" )); do
        local replace_mode="$1";
        case "$1" in 
            --replace)
                if ! "$_substituteStream_has_warned_replace_deprecation"; then
                    echo "substituteStream() in derivation $name: WARNING: '--replace' is deprecated, use --replace-{fail,warn,quiet}. ($description)" 1>&2;
                    _substituteStream_has_warned_replace_deprecation=true;
                fi;
                replace_mode='--replace-warn'
            ;&
            --replace-quiet | --replace-warn | --replace-fail)
                pattern="$2";
                replacement="$3";
                shift 3;
                local savedvar;
                savedvar="${!var}";
                eval "$var"'=${'"$var"'//"$pattern"/"$replacement"}';
                if [ "$pattern" != "$replacement" ]; then
                    if [ "${!var}" == "$savedvar" ]; then
                        if [ "$replace_mode" == --replace-warn ]; then
                            printf "substituteStream() in derivation $name: WARNING: pattern %q doesn't match anything in %s\n" "$pattern" "$description" 1>&2;
                        else
                            if [ "$replace_mode" == --replace-fail ]; then
                                printf "substituteStream() in derivation $name: ERROR: pattern %q doesn't match anything in %s\n" "$pattern" "$description" 1>&2;
                                return 1;
                            fi;
                        fi;
                    fi;
                fi
            ;;
            --subst-var)
                local varName="$2";
                shift 2;
                if ! [[ "$varName" =~ ^[a-zA-Z_][a-zA-Z0-9_]*$ ]]; then
                    echo "substituteStream() in derivation $name: ERROR: substitution variables must be valid Bash names, \"$varName\" isn't." 1>&2;
                    return 1;
                fi;
                if [ -z ${!varName+x} ]; then
                    echo "substituteStream() in derivation $name: ERROR: variable \$$varName is unset" 1>&2;
                    return 1;
                fi;
                pattern="@$varName@";
                replacement="${!varName}";
                eval "$var"'=${'"$var"'//"$pattern"/"$replacement"}'
            ;;
            --subst-var-by)
                pattern="@$2@";
                replacement="$3";
                eval "$var"'=${'"$var"'//"$pattern"/"$replacement"}';
                shift 3
            ;;
            *)
                echo "substituteStream() in derivation $name: ERROR: Invalid command line argument: $1" 1>&2;
                return 1
            ;;
        esac;
    done;
    printf "%s" "${!var}"
}
sysconfigdataHook ()
{
 
    if [ "$1" = '/nix/store/h3i0acpmr8mrjx07519xxmidv8mpax4y-python3-3.12.5' ]; then
        export _PYTHON_HOST_PLATFORM='linux-x86_64';
        export _PYTHON_SYSCONFIGDATA_NAME='_sysconfigdata__linux_x86_64-linux-gnu';
    fi
}
toPythonPath ()
{
 
    local paths="$1";
    local result=;
    for i in $paths;
    do
        p="$i/lib/python3.12/site-packages";
        result="${result}${result:+:}$p";
    done;
    echo $result
}
unpackFile ()
{
 
    curSrc="$1";
    echo "unpacking source archive $curSrc";
    if ! runOneHook unpackCmd "$curSrc"; then
        echo "do not know how to unpack source archive $curSrc";
        exit 1;
    fi
}
unpackPhase ()
{
 
    runHook preUnpack;
    if [ -z "${srcs:-}" ]; then
        if [ -z "${src:-}" ]; then
            echo 'variable $src or $srcs should point to the source';
            exit 1;
        fi;
        srcs="$src";
    fi;
    local -a srcsArray;
    concatTo srcsArray srcs;
    local dirsBefore="";
    for i in *;
    do
        if [ -d "$i" ]; then
            dirsBefore="$dirsBefore $i ";
        fi;
    done;
    for i in "${srcsArray[@]}";
    do
        unpackFile "$i";
    done;
    : "${sourceRoot=}";
    if [ -n "${setSourceRoot:-}" ]; then
        runOneHook setSourceRoot;
    else
        if [ -z "$sourceRoot" ]; then
            for i in *;
            do
                if [ -d "$i" ]; then
                    case $dirsBefore in 
                        *\ $i\ *)

                        ;;
                        *)
                            if [ -n "$sourceRoot" ]; then
                                echo "unpacker produced multiple directories";
                                exit 1;
                            fi;
                            sourceRoot="$i"
                        ;;
                    esac;
                fi;
            done;
        fi;
    fi;
    if [ -z "$sourceRoot" ]; then
        echo "unpacker appears to have produced no directories";
        exit 1;
    fi;
    echo "source root is $sourceRoot";
    if [ "${dontMakeSourcesWritable:-0}" != 1 ]; then
        chmod -R u+w -- "$sourceRoot";
    fi;
    runHook postUnpack
}
updateAutotoolsGnuConfigScriptsPhase ()
{
 
    if [ -n "${dontUpdateAutotoolsGnuConfigScripts-}" ]; then
        return;
    fi;
    for script in config.sub config.guess;
    do
        for f in $(find . -type f -name "$script");
        do
            echo "Updating Autotools / GNU config script to a newer upstream version: $f";
            cp -f "/nix/store/q6x5ag0rns4swggcyvcgd1x5i488ws6c-gnu-config-2024-01-01/$script" "$f";
        done;
    done
}
updateSourceDateEpoch ()
{
 
    local path="$1";
    [[ $path == -* ]] && path="./$path";
    local -a res=($(find "$path" -type f -not -newer "$NIX_BUILD_TOP/.." -printf '%T@ %p\0' | sort -n --zero-terminated | tail -n1 --zero-terminated | head -c -1));
    local time="${res[0]//\.[0-9]*/}";
    local newestFile="${res[1]}";
    if [ "${time:-0}" -gt "$SOURCE_DATE_EPOCH" ]; then
        echo "setting SOURCE_DATE_EPOCH to timestamp $time of file $newestFile";
        export SOURCE_DATE_EPOCH="$time";
        local now="$(date +%s)";
        if [ "$time" -gt $((now - 60)) ]; then
            echo "warning: file $newestFile may be generated; SOURCE_DATE_EPOCH may be non-deterministic";
        fi;
    fi
}
PATH="$PATH${nix_saved_PATH:+:$nix_saved_PATH}"
XDG_DATA_DIRS="$XDG_DATA_DIRS${nix_saved_XDG_DATA_DIRS:+:$nix_saved_XDG_DATA_DIRS}"
export NIX_BUILD_TOP="$(mktemp -d -t nix-shell.XXXXXX)"
export TMP="$NIX_BUILD_TOP"
export TMPDIR="$NIX_BUILD_TOP"
export TEMP="$NIX_BUILD_TOP"
export TEMPDIR="$NIX_BUILD_TOP"
eval "${shellHook:-}"
